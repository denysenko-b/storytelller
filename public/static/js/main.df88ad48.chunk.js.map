{"version":3,"sources":["components/story-preview/img/default-image.png","components/context/storyteller-service/index.js","components/hoc/withStorytellerService.js","actions/index.js","components/link-button/index.js","components/input/index.js","components/push-story/genres.js","components/push-story/last-change.js","components/push-story/index.js","components/user-avatar/index.js","components/settings-panel/index.js","components/user-panel/index.js","components/header/index.js","components/footer/index.js","components/about/index.js","components/auth/index.js","components/registration/index.js","components/login/index.js","components/story-editor/title-field/index.js","components/story-editor/body/stories-block/index.js","components/story-editor/body/text-field/index.js","components/story-editor/body/quote-field/index.js","components/story-editor/body/image-field/index.js","components/story-editor/body/distributor/index.js","components/story-editor/body/index.js","components/story-editor/add-field-buttons-group/add-image.js","components/story-editor/add-field-buttons-group/index.js","components/story-editor/index.js","components/story-preview/index.js","components/stories/stories.js","components/loader/simple-loader/index.js","components/stories/index.js","components/story-page/story-block.js","components/context-menu/menu-item.js","components/context-menu/index.js","components/story-page/comment.js","components/story-page/my-comment.js","components/story-page/index.js","components/user-page/index.js","components/authors/user-block.js","components/authors/index.js","components/my-settings/user-avatar.js","components/my-settings/profile-edit.js","components/my-settings/change-setting-btn.js","components/my-settings/change-password.js","components/my-settings/stories.js","components/my-settings/followings.js","components/my-settings/index.js","components/error-baner/banner.js","components/error-baner/index.js","components/app/index.js","components/error-indicator/index.js","components/error-boundry/index.js","reducers/index.js","store.js","index.js","services/storyteller.js"],"names":["module","exports","React","createContext","StorytellerServiceProvider","Provider","StorytellerServiceConsumer","Consumer","Wrapped","props","storytellerService","login","needLogin","type","payload","setFirstStoryGenresList","genre","loadGenres","genresList","addErrorMessage","message","time","updateUserData","userData","removeFirstStoryGenresList","setNextRoute","nextRoute","addErrorBanner","delayTime","style","removeErrorBanner","id","text","linkTo","onClick","className","to","input","componentDidMount","disabledAutoFocus","el","current","focus","handlePaste","e","onPaste","preventDefault","data","clipboardData","getData","document","execCommand","render","value","disabled","placeholder","onFocus","onBlur","onMouseEnter","onMouseLeave","onChange","tagName","html","data-placeholder","ref","Component","GenresList","createRef","state","inputV","usedGenres","foundedGenres","handleChange","target","setState","createFoundedGenresList","createUsedGenresList","removeGenre","map","key","componentDidUpdate","o","n","handleKeyDown","removeLastUsedGenre","length","includeValueArr","forEach","name","toLowerCase","includes","push","g","i","splice","addGenre","slice","handleFocus","handleMouseDown","path","con","classList","contains","removeEventListener","componentWillUnmount","usedGenresMappedList","addEventListener","LastChange","previewTitle","previewImage","previewBody","loadDefaultGenre","needDefaultTitleAndBody","btnEnable","postStory","genres","title","body","stories","post","then","storyId","history","catch","forLater","username","drafts","save","createTitle","maxLenght","normalizePreviewText","createBody","onMaxLength","split","join","str","replace","handleImageFieldChange","evt","image","files","urlToImage","get","removeImage","newArr","findIndex","firstStoryGenresList","prevC","newTitle","newBody","handlePostStrory","this","remove","backgroundImage","accept","connect","actions","withStorytellerService","withRouter","useState","click","setClick","storyData","setStoryData","getStory","querySelector","innerHTML","Array","prototype","call","querySelectorAll","item","itemData","src","useEffect","overflowY","Fragment","userId","visible","hideMe","logout","redirectToDefaultSettings","setRedirectToDefaultSettings","settingsPanelVisible","setSettingPanelVisible","documentElement","Header","Footer","WriteStoryButton","GenreButton","active","setActive","Genres","genresButtonList","setGenresButtonList","_id","About","Auth","Registration","loginButtonEnable","password","email","usernameTimer","trueUser","trueEmail","handleLogin","reg","surname","correctUsername","correctEmail","newPassword","convertPassword","disableSpaceAndEnter","firstCorrect","maxLength","checkUsername","code","clearTimer","clearTimeout","addTimer","setTimeout","checkEmail","newValue","symbol","vLength","onKeyDown","EnterLogin","createPasswordDots","repeat","passwordDots","setValue","StoriesBlock","storiesBlock","mobility","width","posY","posX","onMouseDown","parent","getBoundingClientRect","element","y","x","mouseMove","onMouseUp","mobileId","secondId","mobilePos","moveField","block","sort","a","b","clientY","clientX","children","deleteField","top","left","TextField","onHover","showMenu","QuoteField","showMenuClass","ImageField","alt","Distributor","fiedls","removeFieldFunc","moveFieldFunc","storiesBlocks","setStoriesBlocks","createStoriesBlocks","useCallback","fields","field","url","addField","StoryEditor","bodyField","generateId","Date","now","toString","Math","random","removeField","fieldId","newBodyFields","f","l","StoryPreview","date","publishedAt","likes","comments","views","useHistory","defaultImage","day","month","year","StoriesList","storiesList","setStories","story","NoResultH1","Stories","search","sortBy","openSortByFilter","loading","createFilter","query","find","selection","where","getStories","getAll","handleSearch","console","log","changeSortByFilter","showNothing","StoryBlock","_ref","func","closeContextMenu","ContextMenu","items","open","contextX","contextY","close","closeFunc","myItemList","setMyItemList","reverse","EnableReverse","newMyItemList","handleClick","deltaHeight","window","innerHeight","contextMenuHeight","Comment","loadMyLike","loadMyComment","bigCommentBlock","commentId","showComment","bigComment","liked","myComment","openContextMenu","commentUserId","comment","like","clientHeight","likeComment","redirectToLoginFromUnauth","likeFunc","commentUnlike","commentLike","loadLikes","serverError","getSmallData","loadComment","users","getById","openAllComment","openAllCommentFromCommentText","complainComment","removeComment","updateCommentsList","FIRST","SECOND","pathname","location","error","nameBlock","contextMenu","toLocaleString","MyComment","addComment","handleComment","loadComments","StoryPage","author","quote","checkMyLike","commentBlocks","createTitleBlock","createBodyBlocks","bodyBlocks","sb","createBeautyQuote","loadStory","createComments","match","params","coms","convertData","loadStoryDataOnService","unlike","beautyQuote","absAuthor","myData","setStoriesList","setUserData","showAbout","setShowAbout","bigAbout","setBigAbout","aboutBlock","setAboutBlockRef","imFollower","setImFollower","followers","setFollowers","myPage","setMyPage","about","myId","myUsername","getUserData","getUserFollowers","openAboutUser","followFunc","unfollow","follow","Authors","authorsList","createAuthorsList","createAuthorBlocks","newAuthorsList","user","UserAvatar","ProfileEdit","imageForm","loadMyData","updateButtonEnable","clickOnImageForm","uploadImage","update","loadSmallData","status","uname","myEmail","myName","MySurname","AboutMe","undefined","usernameU","emailU","nameU","surnameU","aboutU","ChangeSettingBtn","link","setClassName","oldPassword","changeOldPassword","newPassword1","changeNewPassword1","newPassword2","changeNewPassword2","setUpdateButtonEnable","updatePassword","removeMe","storyClick","MyStories","myStories","createMyStoriesList","buildStoriesList","removeStory","FollowerBlock","getUserById","UserFollowers","followingsList","getMyFollowings","followings","createFollowingsList","MySettings","ErrorBanner","styleClass","showMe","setShowMe","dTimerId","useRef","removeBanner","errorBanners","errorBannersList","setErrorBannerList","createErrorBannerList","bannerId","defaultDelayTime","App","auth","exact","ErrorIndicator","ErrorBoundry","hasError","initialState","store","createStore","banner","BASE_URL","_setToken","token","localStorage","setItem","_getToken","getItem","_sendReq","method","contentType","fetch","headers","JSON","stringify","_post","_get","_checkError","res","ok","_parseRes","json","Error","fileData","formData","FormData","append","getMonth","monthId","d","getDate","getFullYear","skip","limit","oldP","newP","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.df88ad48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-image.8b77a166.png\";","import React from 'react';\r\n\r\nconst {\r\n    Provider: StorytellerServiceProvider,\r\n    Consumer: StorytellerServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    StorytellerServiceProvider,\r\n    StorytellerServiceConsumer\r\n}","import React from 'react';\r\nimport { StorytellerServiceConsumer } from '../context/storyteller-service';\r\n\r\nexport default () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <StorytellerServiceConsumer>\r\n                {\r\n                    (storytellerService) => {\r\n                        return (<Wrapped {...props} storytellerService={storytellerService} />)\r\n                    }\r\n                }\r\n            </StorytellerServiceConsumer>\r\n        )\r\n    }\r\n}","const login = (needLogin) => ({\r\n    type: 'login',\r\n    payload: needLogin\r\n})\r\n\r\nconst setFirstStoryGenresList = (genre) => ({\r\n    type: 'setFirstStoryGenresList',\r\n    payload: genre\r\n})\r\n\r\nconst removeFirstStoryGenresList = () => ({\r\n    type: 'removeFirstStoryGenresList'\r\n})\r\n\r\nconst loadGenres = (genresList) => ({\r\n    type: 'loadGenres',\r\n    payload: genresList\r\n})\r\n\r\nconst addErrorMessage = (message, time) => ({\r\n    type: 'addErrorMessage',\r\n    payload: {\r\n        message,\r\n        time\r\n    }\r\n})\r\n\r\nconst updateUserData = (userData) => ({\r\n    type: 'updateUserData',\r\n    payload: userData\r\n})\r\n\r\nconst setNextRoute = (nextRoute) => ({\r\n    type: 'setNextRoute',\r\n    payload: nextRoute\r\n})\r\n\r\nconst addErrorBanner = (message, delayTime = 3, style='black') => {\r\n\r\n    return {\r\n        type: 'addErrorBanner',\r\n        payload: {\r\n            message,\r\n            delayTime,\r\n            style\r\n        }\r\n    }\r\n}\r\n\r\nconst removeErrorBanner = (id) => {\r\n    return {\r\n        type: 'removeErrorBanner',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport default {\r\n    login,\r\n    setFirstStoryGenresList,\r\n    loadGenres,\r\n    addErrorMessage,\r\n    updateUserData,\r\n    removeFirstStoryGenresList,\r\n    setNextRoute,\r\n    addErrorBanner,\r\n    removeErrorBanner\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.scss';\r\n\r\nexport default ({ text, linkTo, onClick, className, style={} }) => {\r\n\r\n    return (\r\n        <Link\r\n            to={linkTo}\r\n            className={className}\r\n            style={style}\r\n        >\r\n            <button onClick={onClick}>\r\n                <span>\r\n                    {text}\r\n                </span>\r\n            </button>\r\n        </Link>\r\n    )\r\n}","import React from 'react';\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nimport './style.scss';\r\n\r\nexport default class extends React.Component {\r\n    input = null;\r\n\r\n    componentDidMount = () => {\r\n        const { disabledAutoFocus } = this.props;\r\n\r\n        if (!disabledAutoFocus) {\r\n            this.input.el.current.focus();\r\n        }\r\n    }\r\n\r\n    handlePaste = e => {\r\n        const { onPaste } = this.props;\r\n\r\n        e.preventDefault();\r\n\r\n        if (onPaste) onPaste(e);\r\n        else {\r\n            const data = e.clipboardData.getData('Text');\r\n            document.execCommand('insertText', false, data);\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { value = '',\r\n            disabled = false,\r\n            className = '',\r\n            placeholder = null,\r\n            onFocus = null,\r\n            onBlur = null,\r\n            onMouseEnter = null,\r\n            onMouseLeave = null,\r\n            onChange = null,\r\n            tagName='div'\r\n        } = this.props;\r\n\r\n        return (\r\n            <ContentEditable\r\n                html={value}\r\n                className={`input-contenteditable ${className}`}\r\n                disabled={disabled}\r\n                data-placeholder={placeholder}\r\n                tagName={tagName}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                onFocus={onFocus}\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n                onPaste={this.handlePaste}\r\n                ref={ref => this.input = ref}\r\n            >\r\n\r\n            </ContentEditable>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class GenresList extends React.Component {\r\n    input = React.createRef();\r\n\r\n    state = {\r\n        inputV: '',\r\n        usedGenres: [],\r\n        foundedGenres: []\r\n    }\r\n\r\n    handleChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            inputV: value\r\n        })\r\n        this.createFoundedGenresList(value);\r\n    }\r\n\r\n    createUsedGenresList = () => {\r\n        const { usedGenres, removeGenre } = this.props;\r\n\r\n        if (usedGenres) {\r\n            return usedGenres.map(genre => {\r\n\r\n                return (\r\n                    <li key={genre} onClick={() => removeGenre(genre)} className='used-genre'>\r\n                        <span>\r\n                            {genre}\r\n                        </span>\r\n                        <div className='cross' onClick={() => removeGenre(genre)}>\r\n\r\n                        </div>\r\n                    </li>\r\n                )\r\n            })\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate = ({ usedGenres: o }) => {\r\n        const { usedGenres: n } = this.props;\r\n        const { inputV } = this.state;\r\n\r\n        if (o !== n && inputV !== 0) {\r\n            this.createFoundedGenresList(inputV);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = ({ key }) => {\r\n        if (key === 'Backspace') {\r\n            const { removeLastUsedGenre, usedGenres } = this.props;\r\n            const { inputV } = this.state;\r\n\r\n            if (usedGenres.length > 0 && inputV === '') {\r\n                removeLastUsedGenre();\r\n            }\r\n        }\r\n    }\r\n\r\n    createFoundedGenresList = (value) => {\r\n        const { genresList, usedGenres } = this.props;\r\n\r\n        let includeValueArr = [];\r\n\r\n        genresList.forEach((genre) => {\r\n            const { name } = genre;\r\n\r\n            if (\r\n                name.toLowerCase().includes(\r\n                    value.toLowerCase()\r\n                ) && value !== ''\r\n            ) {\r\n                includeValueArr.push(name);\r\n            }\r\n        })\r\n\r\n        usedGenres.forEach(g => {\r\n            includeValueArr.forEach((i, id) => {\r\n                if (i === g) {\r\n                    includeValueArr.splice(id, 1);\r\n                }\r\n            })\r\n        })\r\n\r\n        if (includeValueArr.length > 0) {\r\n            const { addGenre } = this.props;\r\n\r\n            this.setState({\r\n                foundedGenres: includeValueArr.slice(0, 5).map((name) => {\r\n                    return (\r\n                        <li key={name} onClick={() => {\r\n                            addGenre(name);\r\n                            this.setState({\r\n                                inputV: '',\r\n                                foundedGenres: []\r\n                            })\r\n                        }}  className='found-genre'>\r\n                            <div>\r\n                                <span>\r\n                                    {name}\r\n                                </span>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                foundedGenres: []\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFocus = () => {\r\n        const { input } = this;\r\n\r\n        if (input) {\r\n            input.current.focus()\r\n        }\r\n    }\r\n\r\n    handleMouseDown = ({path}) => {\r\n        let con = true;\r\n        \r\n        for (let i = 0; i<path.length - 2; i++) {\r\n            if ( path[i].classList.contains('genres') ) {\r\n                con = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (con) {\r\n            this.setState({\r\n                inputV: '',\r\n                foundedGenres: []\r\n            })\r\n        }\r\n\r\n        document.removeEventListener('mouseup', this.handleMouseDown, false);\r\n        document.removeEventListener('keydown', this.handleKeyDown, false);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener('mouseup', this.handleMouseDown, false);\r\n        document.removeEventListener('keydown', this.handleKeyDown, false);\r\n    }\r\n\r\n    render = () => {\r\n        const { inputV, foundedGenres } = this.state;\r\n\r\n        const usedGenresMappedList = this.createUsedGenresList();\r\n\r\n        return (\r\n            <div\r\n                className='genres'\r\n                onClick={this.handleFocus}\r\n            >\r\n                <ul className='used-genres' onClick={this.handleFocus}>\r\n                    {usedGenresMappedList}\r\n                    <li>\r\n                        <input\r\n                            value={inputV}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Додати жанр...\"\r\n                            ref={this.input}\r\n                            onFocus={() => {\r\n                                document.addEventListener('keydown', this.handleKeyDown, false);\r\n                            }}\r\n                            onBlur={() => {\r\n                                document.addEventListener('keydown', this.handleKeyDown, false);\r\n                                document.addEventListener('mouseup', this.handleMouseDown, false);\r\n                            }}\r\n                        />\r\n                    </li>\r\n                </ul>\r\n                <ul className={`founded-genres gnrs ${foundedGenres.length > 0 ? 'active' : 'disabled'}`}>\r\n                    {foundedGenres}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\nimport { withStorytellerService } from '../hoc';\r\nimport actions from '../../actions';\r\n\r\nimport LinkBtn from '../link-button';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Input from '../input';\r\n\r\nimport Genres from './genres';\r\n\r\nclass LastChange extends React.Component {\r\n    state = {\r\n        previewTitle: '',\r\n        previewImage: null,\r\n        previewBody: '',\r\n\r\n        usedGenres: [],\r\n\r\n        loadDefaultGenre: true,\r\n        needDefaultTitleAndBody: true,\r\n\r\n        btnEnable: false\r\n    }\r\n\r\n    postStory = () => {\r\n        const { usedGenres: genres, previewImage, previewBody, previewTitle } = this.state;\r\n\r\n        const { title, body, storytellerService } = this.props;\r\n\r\n        storytellerService.stories.post(title, body, genres, previewImage, previewBody, previewTitle).then(storyId => {\r\n            const { history } = this.props;\r\n\r\n            history.push(`/stories/${storyId}`);\r\n        })\r\n            .catch(() => { });\r\n    }\r\n\r\n    forLater = () => {\r\n        const { storytellerService, title, body, addErrorBanner, history, userData: {username} } = this.props;\r\n        const { previewTitle, previewBody, previewImage } = this.state;\r\n\r\n        storytellerService.drafts.save(\r\n            title,\r\n            body,\r\n            previewTitle,\r\n            previewBody,\r\n            previewImage\r\n        )\r\n        .then(() => {\r\n            addErrorBanner('Збережено', 3);\r\n\r\n            history.push(`/authors/${username}`);\r\n        })\r\n        .catch(() => {\r\n            addErrorBanner('На сервері виникли проблеми, будь-ласка, спробуйте ще раз через декілька секунд', 3);\r\n        });\r\n    }\r\n\r\n    createTitle = ({ target: { value } }, maxLenght) => {\r\n        this.setState(() => {\r\n            return {\r\n                previewTitle: this.normalizePreviewText(value, maxLenght)\r\n            }\r\n        })\r\n    }\r\n\r\n    createBody = ({ target: { value } }, maxLenght) => {\r\n        this.setState(() => {\r\n            return {\r\n                previewBody: this.normalizePreviewText(value, maxLenght)\r\n            }\r\n        })\r\n    }\r\n\r\n    onMaxLength = (value, maxLenght) => {\r\n        if (value.length > maxLenght) {\r\n            return value.split('').slice(0, maxLenght).join('');\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    normalizePreviewText = (value, maxLenght) => {\r\n        const str = value.split('<br>').join('').split('<div>').join('').split('</div>').join('').replace('&nbsp;', ' ').replace('&nbs;', '').replace('&amp;', '');\r\n        return this.onMaxLength(str, maxLenght);\r\n    };\r\n\r\n    handleImageFieldChange = evt => {\r\n        const { storytellerService } = this.props;\r\n\r\n        storytellerService.image.post(evt.target.files[0])\r\n            .then(urlToImage => {\r\n                this.setState(() => {\r\n                    return {\r\n                        previewImage: storytellerService.image.get(urlToImage)\r\n                    }\r\n                })\r\n            })\r\n            .catch(() => { });\r\n\r\n        evt.target.value = null;\r\n    }\r\n\r\n    removeImage = () => {\r\n        this.setState(() => {\r\n            return {\r\n                previewImage: null\r\n            }\r\n        })\r\n    }\r\n\r\n    removeLastUsedGenre = () => {\r\n        const { usedGenres } = this.state;\r\n        let newArr = usedGenres.slice(0, usedGenres.length - 1);\r\n        newArr.splice(newArr.length, 1);\r\n\r\n        this.setState({\r\n            usedGenres: newArr\r\n        })\r\n    }\r\n\r\n    addGenre = (genre) => {\r\n\r\n        const { usedGenres } = this.state;\r\n\r\n\r\n        const idx = usedGenres.findIndex(g => g === genre);\r\n\r\n        if (idx !== -1) {\r\n            this.removeGenre(genre);\r\n        }\r\n        else {\r\n\r\n            this.setState({\r\n                usedGenres: [\r\n                    ...usedGenres,\r\n                    genre\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    removeGenre = (genre) => {\r\n        this.setState(({ usedGenres }) => {\r\n            const id = usedGenres.findIndex(g => g === genre);\r\n\r\n            if (id === -1) {\r\n                return {\r\n                    usedGenres\r\n                }\r\n            }\r\n            else {\r\n                let newArr = usedGenres.slice(0, usedGenres.length);\r\n                newArr.splice(id, 1);\r\n\r\n                return {\r\n                    usedGenres: newArr\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { firstStoryGenresList, removeFirstStoryGenresList } = this.props;\r\n\r\n        this.setState({\r\n            usedGenres: firstStoryGenresList\r\n        })\r\n\r\n        removeFirstStoryGenresList();\r\n    }\r\n\r\n    componentDidUpdate = ({className: prevC}) => {\r\n        const { previewBody, previewTitle, btnEnable, needDefaultTitleAndBody } = this.state;\r\n        const { title, body, className } = this.props;\r\n\r\n        if (needDefaultTitleAndBody) {\r\n            if (className !== prevC) {\r\n                const newTitle = title.split('<')[0].split(' ').slice(0, 9).join(' ');\r\n                const newBody = body.length !== 0 ? body[0].value.split('<')[0].split(' ').slice(0, 9).join(' ') : '';\r\n\r\n                this.setState({\r\n                    needDefaultTitleAndBody: false,\r\n                    previewTitle: newTitle,\r\n                    previewBody: newBody\r\n                })\r\n            }\r\n        }\r\n\r\n        if (title.length !== 0 && body.length !== 0 && previewBody.length !== 0 && previewTitle.length !== 0) {\r\n\r\n            if (!btnEnable) {\r\n                this.setState({\r\n                    btnEnable: true\r\n                })\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (btnEnable) {\r\n                this.setState({\r\n                    btnEnable: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePostStrory = () => {\r\n        const { btnEnable } = this.state;\r\n        if (btnEnable) {\r\n            this.postStory();\r\n        }\r\n        else {\r\n           const {addErrorBanner} = this.props;\r\n           \r\n           addErrorBanner('Розповідь повинна мастити заголовок, тіло, міні-заголовок та короткий опис', 6, 'white');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { previewBody, previewTitle, previewImage, usedGenres, btnEnable } = this.state;\r\n        const { remove, genresList, className } = this.props;\r\n\r\n        return (\r\n            <div className={`last-story-change ` + className}>\r\n                <div className=\"background\" onClick={() => remove()}></div>\r\n                <div className=\"layout\">\r\n                    <div className=\"col preview__container\">\r\n                        <h3>Попередній перегяд</h3>\r\n                        <div className=\"preview\">\r\n                            <div className={`preview-image ${previewImage ? 'with-image' : ''}`} style={{\r\n                                backgroundImage: `url(${previewImage})`\r\n                            }}>\r\n                                {previewImage ? <div className='cross' onClick={() => this.removeImage()}></div> : null}\r\n                                <label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\".jpg, .jpeg, .png\"\r\n                                        name=\"upload-image\"\r\n                                        onChange={this.handleImageFieldChange}\r\n                                    />\r\n                                    Зображення\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"title-and-body__preview\">\r\n                                <Input tagName='h3' className='title' onChange={evt => this.createTitle(evt, 60)} placeholder='заголовок... (60 символів)' value={previewTitle} />\r\n                                <Input tagName='p' className='body' onChange={evt => this.createBody(evt, 120)} placeholder='короткий опис... (120 символів)' value={previewBody} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col right-col\">\r\n                        <h3 className='add-genre-h3'>Додайте декілька жанрів</h3>\r\n                        <Genres\r\n                            removeLastUsedGenre={this.removeLastUsedGenre}\r\n                            usedGenres={usedGenres}\r\n                            genresList={genresList}\r\n                            addGenre={this.addGenre}\r\n                            removeGenre={this.removeGenre}\r\n                        />\r\n                        <div className=\"hr\"></div>\r\n                        <div className=\"publish\">\r\n                            <LinkBtn\r\n                                linkTo='#'\r\n                                onClick={this.handlePostStrory}\r\n                                className={`blue-btn small-blue-btn ${btnEnable ? 'enabled' : 'disabled'}`}\r\n                                text='Опублікувати'\r\n                            />\r\n                            {/* <LinkBtn linkTo='#' onClick={this.forLater} className='for-later-btn' text='Залишити на потім' /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ genresList, firstStoryGenresList, userData }) =>\r\n    (\r\n        { genresList, firstStoryGenresList, userData }\r\n    ), actions)(\r\n        withStorytellerService()(\r\n            withRouter(LastChange)\r\n        )\r\n    )","import React from 'react';\r\nimport LinkButton from '../link-button';\r\n\r\nimport LastChange from './last-change';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default () => {\r\n    const [click, setClick] = useState(false);\r\n\r\n    const [storyData, setStoryData]  = useState({\r\n        title: '',\r\n        body: []\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setClick(true);\r\n        getStory();\r\n        \r\n        document.removeEventListener('keydown', handleKeyDown, false);\r\n        document.addEventListener('keydown', handleKeyDown, false);\r\n    }    \r\n\r\n    const handleKeyDown = ({key}) => {\r\n        if (key === 'Escape') {\r\n            document.removeEventListener('keydown', handleKeyDown, false);\r\n            setClick(false);\r\n        }\r\n    }\r\n\r\n    const getStory = () => {\r\n        const title = document.querySelector('.story-editor .title-field').innerHTML;\r\n\r\n        const bodyItems = Array.prototype.slice.call(document.querySelectorAll('.story-editor .body .stories-block .story-item'));\r\n\r\n        const body = bodyItems.map(item => {\r\n            let itemData = {\r\n                type: '',\r\n                value: item.innerHTML\r\n            }\r\n\r\n            if (item.classList.contains('text')) {\r\n                itemData.type = 'text';\r\n            }\r\n            if (item.classList.contains('quote')) {\r\n                itemData.type = 'quote';\r\n            }\r\n            if (item.classList.contains('img')) {\r\n                itemData.type = 'img';\r\n                itemData.value = item.src;\r\n            }\r\n            if (item.classList.contains('distributor')) {\r\n                itemData.type = 'hr';\r\n                delete itemData.value;\r\n            }\r\n\r\n            return itemData;\r\n        })\r\n        setStoryData({\r\n            title,\r\n            body\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'Нова історія – Storyteller'\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (click) {\r\n            document.body.style.overflowY = 'hidden';\r\n        }\r\n        else {\r\n            document.body.style.overflowY = 'auto';\r\n        }\r\n\r\n        return () => {\r\n            document.body.style.overflowY = 'auto';\r\n        }\r\n    }, [click])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <LinkButton className=\"blue-btn minimize a\" linkTo=\"#\" text=\"Опублікувати\" onClick={handleClick}/>\r\n            {\r\n                <LastChange className={click ? \"\" : \"hidden\"} remove={() => setClick(false)} title={storyData.title} body={storyData.body}/>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport LinkButton from '../link-button';\r\n\r\nexport default ({ urlToImage, className, userId }) => {\r\n\r\n    return (\r\n        <LinkButton\r\n            linkTo={`/authors/${userId}`}\r\n            className={`${className} ${urlToImage ? '' : 'default'}`}\r\n            style={\r\n                urlToImage ? { backgroundImage: `url(${urlToImage})` } : {}\r\n            }\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './style.scss';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport actions from '../../actions';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\n\r\nconst SettingsPanel = ({ visible, hideMe, history, login, storytellerService }) => {\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            document.body.style.overflowY = 'hidden';\r\n        }\r\n        else {\r\n            document.body.style.overflowY = 'auto';\r\n        }\r\n    }, [visible])\r\n\r\n    const linkTo = (to) => {\r\n        hideMe();\r\n        history.push(`/settings${to}`);\r\n    }\r\n\r\n    const logout = () => {\r\n        login(true);\r\n        hideMe();\r\n        storytellerService.logout();\r\n    }\r\n\r\n    return (\r\n        <div className={`settings-panel-container ${visible ? '' : 'hide'}`}>\r\n            <div className=\"background\" onClick={hideMe}></div>\r\n            <div className=\"settings-panel-inner\">\r\n                <button onClick={() => linkTo('/profile')}>\r\n                    Редагувати профіль\r\n                </button>\r\n                <button onClick={() => linkTo('/password')}>\r\n                    Змінити пароль\r\n                </button>\r\n                <button onClick={() => linkTo('/stories')}>\r\n                    Історії\r\n                </button>\r\n                <button onClick={() => linkTo('/followings')}>\r\n                    Стежу за...\r\n                </button>\r\n                <button className='logout' onClick={logout}>\r\n                    Вийти\r\n                </button>\r\n                <button onClick={hideMe}>\r\n                    Скасувати\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(() => ({}), actions)(\r\n    withRouter(\r\n        withStorytellerService()(SettingsPanel)\r\n    )\r\n);","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport LinkButton from '../link-button';\r\n\r\nimport PushStoryBtn from '../push-story';\r\n\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport UserAvatar from '../user-avatar';\r\n\r\nimport SettingsPanel from '../settings-panel';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst UserPanel = ({ needLogin, userData }) => {\r\n\r\n    const { username, urlToImage } = userData;\r\n    const [redirectToDefaultSettings, setRedirectToDefaultSettings] = useState(false);\r\n    const [settingsPanelVisible, setSettingPanelVisible] = useState(false);\r\n\r\n    const hideSettingsPanel = () => {\r\n        setSettingPanelVisible(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (document.documentElement.classList.contains('mobile')) {\r\n            setRedirectToDefaultSettings(true);\r\n        }\r\n    }, [])\r\n\r\n    if (!needLogin) {\r\n        return (\r\n            <div className=\"user-panel\">\r\n                {/* <LinkButton linkTo=\"#\" className=\"notifications up-item a\" /> */}\r\n                <SettingsPanel visible={settingsPanelVisible} hideMe={hideSettingsPanel} />\r\n                <Switch>\r\n                    <Route path='/write-story'>\r\n                        <PushStoryBtn />\r\n                    </Route>\r\n                    <Route path='/settings'>\r\n                        <LinkButton className=\"blue-btn minimize a\" linkTo=\"/write-story\" text=\"Додати розповідь\" />\r\n                    </Route>\r\n                    <Route path='/'>\r\n                        {\r\n                            redirectToDefaultSettings ?\r\n                                <LinkButton className=\"setting up-item a\" linkTo='/settings/profile' /> :\r\n                                <div className=\"setting up-item a\" onClick={() => setSettingPanelVisible(true)}>\r\n                                    <button>\r\n                                        <span></span>\r\n                                    </button>\r\n                                </div>\r\n                        }\r\n                        <LinkButton className=\"blue-btn minimize a\" linkTo=\"/write-story\" text=\"Додати розповідь\" />\r\n                    </Route>\r\n                </Switch>\r\n                <UserAvatar urlToImage={urlToImage} className='user-avatar up-item' userId={username} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"user-panel\">\r\n                <Switch>\r\n                    <Route path='/about'>\r\n                        <LinkButton text='Розповісти' linkTo='/registration' className='blue-btn' />\r\n                    </Route>\r\n                    <Route path='/registration'>\r\n                        {/* <LinkButton text='Увійти' linkTo='/login' className='blue-btn' /> */}\r\n                    </Route>\r\n                    <Route path='/login'>\r\n                        {/* <LinkButton text='Зареєструватися' linkTo='/registration' className='blue-btn' /> */}\r\n                    </Route>\r\n                    <Route path='/'>\r\n                        <Link to='/login'>\r\n                            Увійти\r\n                        </Link>\r\n                        <LinkButton text='Зареєструватися' linkTo='/registration' className='blue-btn' />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ needLogin, userData }) => ({ needLogin, userData }), () => ({}))(\r\n    UserPanel\r\n)","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport UserPanel from '../user-panel';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"top\">\r\n                <div className='left'>\r\n                    <Link to=\"/\">\r\n                        <div className=\"storyteller-logo\"></div>\r\n                    </Link>\r\n                </div>\r\n                <div className='right'>\r\n                    <UserPanel />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className='left'>\r\n                <Link to=\"/\">\r\n                    <div className=\"storyteller-logo\"></div>    \r\n                </Link>\r\n                <span className='copyright'>© 2020, Storyteller</span>\r\n            </div>\r\n            <div className='right'>\r\n                <li>\r\n                    <Link to=\"/stories\"><span>Розповіді</span></Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/authors\"><span>Автори</span></Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/about\"><span>Про Storyteller</span></Link>\r\n                </li>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport './style.scss';\r\n\r\nimport LinkButton from '../link-button';\r\n\r\nimport actions from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst WrStBtn = ({ setNextRoute }) => {\r\n\r\n    const handleClick = () => {\r\n        setNextRoute('/write-story');\r\n    }\r\n\r\n    return (\r\n        <LinkButton text=\"Почати розповідь\" linkTo=\"/write-story\" className=\"blue-btn\" onClick={handleClick} />\r\n    )\r\n}\r\n\r\nconst WriteStoryButton = connect(() => ({}), actions)(\r\n    WrStBtn\r\n)\r\n\r\n\r\nconst GenreButton = connect(() => ({}), actions)(\r\n    ({ text, id, setFirstStoryGenresList }) => {\r\n\r\n        const [active, setActive] = useState(false);\r\n\r\n        const onClick = () => {\r\n            setFirstStoryGenresList(text);\r\n            setActive(!active);\r\n        }\r\n\r\n        return (\r\n            <button className={active ? \"active\" : \"\"} onClick={onClick}><span>{text}</span></button >\r\n        )\r\n    }\r\n);\r\n\r\nconst Genres = connect(({ genresList }) => ({ genresList }), actions)(\r\n    ({ genresList }) => {\r\n        const [genresButtonList, setGenresButtonList] = useState([]);\r\n\r\n        useEffect(() => {\r\n            setGenresButtonList(genresList.map(({ _id, name }) =>\r\n                (<GenreButton text={name} key={_id} id={_id} />)\r\n            ))\r\n        }, [genresList])\r\n\r\n        return (\r\n            <div className=\"genres\">\r\n                <h1>Не бійся показати талант <br /> усьому світові!</h1>\r\n                <div className=\"genres-list\">\r\n                    {genresButtonList}\r\n                </div>\r\n                <h3>\r\n                    В яких жанрах ти розпочнеш майбутню розповідь?\r\n                </h3>\r\n                <WriteStoryButton />\r\n            </div>\r\n        )\r\n    }\r\n);\r\n\r\n\r\nclass About extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        document.title = 'Ласкаво просимо до Storyteller';\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"about\">\r\n                <Genres />\r\n                <div className=\"main\">\r\n                    <section className='your-story'>\r\n                        <div className=\"text\">\r\n                            <h2>Напиши<br />свою історію!</h2>\r\n                            <p>\r\n                                Хочеш написати книгу або коротке\r\n                                оповідання? А може ти поет або поетеса?\r\n                    <span> Пам’ятай! У кожного є історія, якою\r\n                    він хотів би поділитися!</span>\r\n                            </p>\r\n                        </div>\r\n                    </section>\r\n                    <section className='reverse chapter'>\r\n                        <div className=\"text\">\r\n                            <h2>Пиши главу <br /> за главою.</h2>\r\n                            <p>\r\n                                Навіть якщо твоя розповідь ще не закінчена,\r\n                                ти можеш публікувати її поступово, главу\r\n                    за главую. <span>Твої підписники будуть\r\n                    з нетерпінням чекати нових оновлень.</span>\r\n                            </p>\r\n                        </div>\r\n                    </section>\r\n                    <section className='feedback'>\r\n                        <div className=\"text\">\r\n                            <h2>Отримуй “фідбек”.</h2>\r\n                            <p>\r\n                                Пиши розповіді, книги або вірші, отримуй\r\n                                лайки, коментарі і безпосередньо спілкуйся\r\n                                з шанувальниками свого таланту. Хочеш\r\n                    заробляти на цьому? Легко!<span> Підписники\r\n                                мають змогу матеріально підтримувати\r\n                    улюблених авторів.</span>\r\n                            </p>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <h2>Розкрий свій талант.<br />Покажи свої думки.</h2>\r\n                    <WriteStoryButton />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nimport actions from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Auth = () => (Wrapped) => connect(({nextRoute}) => ({nextRoute}), actions)\r\n    (\r\n        withRouter(\r\n            withStorytellerService()((props) => {\r\n\r\n                return (\r\n                    <div className=\"auth\">\r\n                        <div className=\"left\"></div>\r\n                        <div className=\"right\">\r\n                            <Wrapped {...props}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    )\r\n\r\nexport default Auth;","import React from 'react';\r\nimport Auth from '../auth';\r\n\r\nimport LinkButton from '../link-button';\r\n\r\nimport Input from '../input';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Registration extends React.Component {\r\n    state = {\r\n        loginButtonEnable: false,\r\n\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        usernameTimer: null,\r\n\r\n        trueUser: false,\r\n        trueEmail: false\r\n        // ,\r\n        // truePass: false\r\n    }\r\n\r\n    handleLogin = () => {\r\n        const { storytellerService, login, updateUserData } = this.props;\r\n        const { username, password, email } = this.state;\r\n\r\n        storytellerService.reg(username, email, password)\r\n            .then((userData) => {\r\n                login(false);\r\n\r\n                const { username, name, surname, urlToImage, _id: userId } = userData;\r\n\r\n\r\n                updateUserData({\r\n                    userId,\r\n                    username,\r\n                    name,\r\n                    urlToImage,\r\n                    surname\r\n                })\r\n            })\r\n            .catch((e) => {\r\n                login(true);\r\n\r\n                const { addErrorBanner } = this.props;\r\n                addErrorBanner('Перевірте корректність введених данних', 3);\r\n            });\r\n    }\r\n\r\n    username = ({ target: { value } }) => {\r\n\r\n        this.setState({\r\n            username: this.correctUsername(value)\r\n        })\r\n    }\r\n\r\n    email = ({ target: { value } }) => this.setState({\r\n        email: this.correctEmail(value)\r\n    })\r\n\r\n    password = ({ target: { value } }) => {\r\n        // const {addErrorBanner} = this.props;\r\n        \r\n        const newPassword = this.convertPassword(this.disableSpaceAndEnter(value));\r\n\r\n        // let truePass = false;\r\n\r\n        // if (newPassword.length > 4) {\r\n        //     truePass = true;\r\n        // }\r\n        // else {\r\n        //     addErrorBanner('Пароль повинен бути довшим 4 символів', 3, 'white');\r\n        // }\r\n\r\n        this.setState({\r\n            password: newPassword\r\n        })\r\n    }\r\n\r\n\r\n    correctUsername = (value) => {\r\n        const { addErrorBanner, storytellerService } = this.props;\r\n\r\n        const firstCorrect = this.maxLength(\r\n            this.disableSpaceAndEnter(value),\r\n            16\r\n        )\r\n\r\n        storytellerService.checkUsername(firstCorrect)\r\n            .then(code => {\r\n                const clearTimer = () => {\r\n                    const { usernameTimer } = this.state;\r\n                    clearTimeout(usernameTimer);\r\n                }\r\n\r\n                const addTimer = (message, delayTime) => {\r\n                    clearTimer();\r\n\r\n                    this.setState({\r\n                        usernameTimer: setTimeout(() => {\r\n                            addErrorBanner(message, delayTime, 'white');\r\n                        }, 500),\r\n                        trueUser: false\r\n                    })\r\n                }\r\n\r\n                if (value.length !== 0) {\r\n                    switch (code) {\r\n                        case 'busy':\r\n                            addTimer('Даний нікнейм вже кимось використовується', 3);\r\n                            break;\r\n\r\n                        case 'incorrect':\r\n                            addTimer('Довжина нікнейма від 4 до 16 симолів. Можна використовувати латинські літери, цифри та нижні підкреслення \"_\"', 3);\r\n                            break;\r\n\r\n                        default:\r\n                            clearTimer();\r\n                            this.setState({\r\n                                trueUser: true\r\n                            })\r\n                    }\r\n                }\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, зачекайте', 3, 'white');\r\n            })\r\n\r\n        return firstCorrect;\r\n    }\r\n\r\n    correctEmail = (value) => {\r\n        const { addErrorBanner, storytellerService } = this.props;\r\n\r\n        const firstCorrect = this.disableSpaceAndEnter(value);\r\n\r\n        storytellerService.checkEmail(firstCorrect)\r\n            .then(code => {\r\n                const clearTimer = () => {\r\n                    const { usernameTimer } = this.state;\r\n                    clearTimeout(usernameTimer);\r\n                }\r\n\r\n                const addTimer = (message, delayTime) => {\r\n                    clearTimer();\r\n\r\n                    this.setState({\r\n                        usernameTimer: setTimeout(() => {\r\n                            addErrorBanner(message, delayTime, 'white');\r\n                        }, 2500),\r\n                        trueEmail: false\r\n                    })\r\n                }\r\n\r\n                if (value.length !== 0) {\r\n                    switch (code) {\r\n                        case 'busy':\r\n                            addTimer('Даний емейл вже використовується', 3);\r\n                            break;\r\n\r\n                        case 'incorrect':\r\n                            addTimer('Введіть корректний емейл', 3);\r\n                            break;\r\n\r\n                        default:\r\n                            clearTimer();\r\n                            this.setState({\r\n                                trueEmail: true\r\n                            })\r\n                    }\r\n                }\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, зачекайте', 3, 'white');\r\n            })\r\n\r\n        return firstCorrect;\r\n    }\r\n\r\n\r\n    maxLength = (value, maxLength) => {\r\n        if (value.length > maxLength) {\r\n            const { addErrorBanner } = this.props;\r\n            addErrorBanner('Максимальна довжина нікнейма 16 символів', 5, 'white');\r\n\r\n            return value.slice(0, maxLength);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    disableSpaceAndEnter = (value) => {\r\n        const removeSymbol = ['<br>', '<div>', '</div>', '</br>'];\r\n\r\n        let newValue = value;\r\n\r\n        removeSymbol.forEach(symbol => {\r\n            newValue = newValue.split(symbol).join('');\r\n        })\r\n\r\n        return newValue.replace('&nbsp;', ' ').replace('&nbsp;', '');\r\n    }\r\n\r\n    convertPassword = (value) => {\r\n        const { password } = this.state;\r\n\r\n        const vLength = value.length;\r\n        const pLength = password.length;\r\n\r\n        let newPassword = password;\r\n\r\n        if (vLength > pLength) {\r\n            newPassword = password + value.slice(vLength - 1, vLength);\r\n        }\r\n        else {\r\n            newPassword = password.slice(0, vLength);\r\n        }\r\n\r\n        return newPassword;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        const { trueUser, password, loginButtonEnable, trueEmail } = this.state;\r\n\r\n        if (trueEmail && trueUser && password) {\r\n            if (!loginButtonEnable) {\r\n                this.setState({\r\n                    loginButtonEnable: true\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            if (loginButtonEnable) {\r\n                this.setState({\r\n                    loginButtonEnable: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.title = 'Реєстрація – Storyteller';\r\n        document.addEventListener('keydown', this.onKeyDown, false); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener('keydown', this.onKeyDown, false); \r\n    }\r\n\r\n    onKeyDown = ({key}) => {\r\n        if (key === 'Enter') {\r\n            this.EnterLogin();\r\n        }\r\n    }\r\n\r\n    EnterLogin = () => {\r\n        const {loginButtonEnable} = this.state;\r\n        const {addErrorBanner} = this.props;\r\n\r\n        if (loginButtonEnable) {\r\n            this.handleLogin();\r\n        }\r\n        else {\r\n            addErrorBanner('Перевірте корректність введених данних', 3, 'white');\r\n        }\r\n    }\r\n\r\n    createPasswordDots = ({ length }) => {\r\n        const dot = '•';\r\n        return dot.repeat(length);\r\n    }\r\n\r\n    render = () => {\r\n        const { loginButtonEnable, username, email, password } = this.state;\r\n\r\n        const passwordDots = this.createPasswordDots(password);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className='p'>\r\n                    Всім привіт! Звертайтесь до мене,\r\n                    як&#160;\r\n                    <Input\r\n                        placeholder=\"введіть нік\"\r\n                        value={username}\r\n                        onChange={this.username}\r\n                        className='input'\r\n                        disabledAutoFocus\r\n                    />\r\n                    .&#160;Одного дня я отримав лист на&#160;\r\n                    <Input\r\n                        placeholder=\"електронну пошту\"\r\n                        value={email}\r\n                        onChange={this.email}\r\n                        className='input'\r\n                        disabledAutoFocus\r\n                    />\r\n                    &#160;з&#160;\r\n                    <Input\r\n                        placeholder=\"паролем\"\r\n                        value={passwordDots}\r\n                        onChange={this.password}\r\n                        className='input'\r\n                        disabledAutoFocus\r\n                    />\r\n                    . Я розкажу як...\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <LinkButton\r\n                        linkTo=\"#\"\r\n                        text=\"Продовжити\"\r\n                        className={`blue-btn ${loginButtonEnable ? '' : 'disabled'}`}\r\n                        onClick={this.handleLogin}\r\n                    />\r\n                    <Link to=\"/login\">\r\n                        Я вже писав історії тут\r\n                    </Link>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth()(Registration);","import React from 'react';\r\nimport Auth from '../auth';\r\n\r\nimport LinkButton from '../link-button';\r\n\r\n// import Input from '../multi-line-input';\r\nimport Input from '../input';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Registration extends React.Component {\r\n    state = {\r\n        loginButtonEnable: false,\r\n\r\n        username: '',\r\n        password: '',\r\n        usernameTimer: null,\r\n\r\n        trueUser: false\r\n    }\r\n\r\n    handleLogin = () => {\r\n        const { storytellerService, login, updateUserData, history, nextRoute } = this.props;\r\n        const { username, password } = this.state;\r\n\r\n        storytellerService.login(username, password).then((userData) => {\r\n            login(false);\r\n\r\n            const { _id: userId } = userData;\r\n\r\n\r\n            updateUserData({\r\n                ...userData,\r\n                userId\r\n            })\r\n\r\n            if (nextRoute) history.push(nextRoute)\r\n\r\n        }).catch(() => {\r\n            login(true);\r\n            const { addErrorBanner } = this.props;\r\n\r\n            this.setState({\r\n                password: ''\r\n            })\r\n\r\n            addErrorBanner('Перевірте корректність введених данних', 3, 'white');\r\n        });\r\n    }\r\n\r\n    username = ({ target: { value } }) => {\r\n\r\n        this.setState({\r\n            username: this.correctUsername(value)\r\n        })\r\n    }\r\n\r\n    email = ({ target: { value } }) => this.setState({\r\n        email: this.correctEmail(value)\r\n    })\r\n\r\n    password = ({ target: { value } }) => {\r\n        this.setState({\r\n            password: this.convertPassword(this.disableSpaceAndEnter(value))\r\n        })\r\n    }\r\n\r\n    correctUsername = (value) => {\r\n        const { addErrorBanner, storytellerService } = this.props;\r\n\r\n        const firstCorrect = this.maxLength(\r\n            this.disableSpaceAndEnter(value),\r\n            16\r\n        )\r\n\r\n        storytellerService.checkUsername(firstCorrect)\r\n            .then(code => {\r\n                const clearTimer = () => {\r\n                    const { usernameTimer } = this.state;\r\n                    clearTimeout(usernameTimer);\r\n                }\r\n\r\n                const addTimer = (message, delayTime) => {\r\n                    clearTimer();\r\n\r\n                    this.setState({\r\n                        usernameTimer: setTimeout(() => {\r\n                            addErrorBanner(message, delayTime, 'white');\r\n                        }, 1000),\r\n                        trueUser: false\r\n                    })\r\n                }\r\n\r\n                if (value.length !== 0) {\r\n                    switch (code) {\r\n                        case 'incorrect':\r\n                            addTimer('Довжина нікнейма від 4 до 16 симолів. Можна використовувати латинські літери, цифри та нижні підкреслення \"_\"', 3);\r\n                            break;\r\n\r\n                        default:\r\n                            clearTimer();\r\n                            this.setState({\r\n                                trueUser: true\r\n                            })\r\n                    }\r\n                }\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, зачекайте', 3, 'white');\r\n            })\r\n\r\n        return firstCorrect;\r\n    }\r\n\r\n    maxLength = (value, maxLength) => {\r\n        if (value.length > maxLength) {\r\n            const { addErrorBanner } = this.props;\r\n            addErrorBanner('Максимальна довжина нікнейма 16 символів', 5, 'white');\r\n\r\n            return value.slice(0, maxLength);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    disableSpaceAndEnter = (value) => {\r\n        const removeSymbol = ['<br>', '<div>', '</div>', '</br>'];\r\n\r\n        let newValue = value;\r\n\r\n        removeSymbol.forEach(symbol => {\r\n            newValue = newValue.split(symbol).join('');\r\n        })\r\n\r\n        return newValue.replace('&nbsp;', ' ').replace('&nbsp;', '');\r\n    }\r\n\r\n    convertPassword = (value) => {\r\n        const { password } = this.state;\r\n\r\n        const vLength = value.length;\r\n        const pLength = password.length;\r\n\r\n        let newPassword = password;\r\n\r\n        if (vLength > pLength) {\r\n            newPassword = password + value.slice(vLength - 1, vLength);\r\n        }\r\n        else {\r\n            newPassword = password.slice(0, vLength);\r\n        }\r\n\r\n        return newPassword;\r\n    }\r\n\r\n    createPasswordDots = ({ length }) => {\r\n        const dot = '•';\r\n        return dot.repeat(length);\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        const { trueUser, password, loginButtonEnable } = this.state;\r\n\r\n        if (trueUser && password) {\r\n            if (!loginButtonEnable) {\r\n                this.setState({\r\n                    loginButtonEnable: true\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            if (loginButtonEnable) {\r\n                this.setState({\r\n                    loginButtonEnable: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.title = 'Вхід – Storyteller';\r\n        document.addEventListener('keydown', this.onKeyDown, false); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener('keydown', this.onKeyDown, false); \r\n    }\r\n\r\n    onKeyDown = ({key}) => {\r\n        if (key === 'Enter') {\r\n            this.EnterLogin();\r\n        }\r\n    }\r\n\r\n    EnterLogin = () => {\r\n        const {loginButtonEnable} = this.state;\r\n        const {addErrorBanner} = this.props;\r\n\r\n        if (loginButtonEnable) {\r\n            this.handleLogin();\r\n        }\r\n        else {\r\n            addErrorBanner('Перевірте корректність введених данних', 3, 'white');\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { loginButtonEnable, password, username } = this.state;\r\n        const { nextRoute } = this.props;\r\n\r\n\r\n        const passwordDots = this.createPasswordDots(password);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className='p'>\r\n                    Привіт! Мене звати&#160;\r\n                        <Input\r\n                        placeholder=\"введіть нік\"\r\n                        // maxLength=\"16\"\r\n                        value={username}\r\n                        onChange={this.username}\r\n                        className='input'\r\n                        disabledAutoFocus\r\n                    />\r\n                        &#160;Надіюсь мій&#160;\r\n                        <Input\r\n                        placeholder=\"пароль\"\r\n                        value={passwordDots}\r\n                        onChange={this.password}\r\n                        className='input'\r\n                        disabledAutoFocus\r\n                    />\r\n                        &#160;не загубився.\r\n                        Сьогодні я продовжу писати\r\n                        про те як...\r\n                    </div>\r\n                <div className=\"bottom\">\r\n                    <LinkButton\r\n                        linkTo={nextRoute || '#'}\r\n                        text=\"Продовжити\"\r\n                        className={`blue-btn ${loginButtonEnable ? '' : 'disabled'}`}\r\n                        onClick={this.handleLogin}\r\n                    />\r\n\r\n                    <Link to=\"/registration\">\r\n                        Я ще не писав історій тут\r\n                    </Link>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth()(Registration);","import React, { useState } from 'react';\r\n\r\nimport Input from '../../input';\r\n\r\nexport default () => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleChange = ({ target: { value } }) => setValue(value);\r\n\r\n    return (\r\n        <Input\r\n            tagName='h3'\r\n            placeholder='Назва твоєї історії!'\r\n            value={value}\r\n            className='title-field se-item'\r\n            onChange={handleChange}\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default class StoriesBlock extends React.Component {\r\n    storiesBlock = null;\r\n\r\n    state = {\r\n        mobility: false,\r\n        width: '100%',\r\n        posY: 0,\r\n        posX: 0\r\n    }\r\n\r\n    onMouseDown = evt => {\r\n        const parent = this.storiesBlock.getBoundingClientRect();\r\n        const element = evt.target.getBoundingClientRect();\r\n\r\n        document.body.style.overflowY = 'hidden';\r\n\r\n        this.setState({\r\n            mobility: true,\r\n            width: parent.width,\r\n            posY: element.y,\r\n            posX: element.x\r\n        })\r\n        document.addEventListener('mousemove', this.mouseMove, false);\r\n    }\r\n\r\n    onMouseUp = evt => {\r\n        const { mobility } = this.state;\r\n\r\n        if (mobility) {\r\n            document.body.style.overflowY = 'auto';\r\n\r\n            const {moveField} = this.props; \r\n            let mobileId, secondId, mobilePos;\r\n\r\n            const storiesBlocks = Array.prototype.slice.call(document.querySelectorAll('.body .stories-block'));\r\n\r\n            secondId = storiesBlocks.map((block, id) => {\r\n                const { y } = block.getBoundingClientRect();\r\n\r\n                if (block.classList.contains('mobile')) {\r\n                    mobileId = id;\r\n                    mobilePos = y;\r\n                }\r\n                return y;\r\n            }).sort((a, b) => a - b).findIndex(posY => posY === mobilePos);\r\n            \r\n            moveField(mobileId, secondId);\r\n\r\n            this.setState({\r\n                mobility: false\r\n            })\r\n            document.removeEventListener('mousemove', this.mouseMove, false);\r\n        }\r\n    }\r\n\r\n    mouseMove = evt => this.setState({\r\n        posY: evt.clientY,\r\n        posX: evt.clientX\r\n    })\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mouseup', this.onMouseUp, false);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mouseup\", this.onMouseUp, false);\r\n        document.removeEventListener('mousedown', this.onMouseDown, false);\r\n        document.removeEventListener('mousemove', this.mouseMove, false);\r\n    }\r\n\r\n    render = () => {\r\n        const { children, className='', onMouseEnter, onMouseLeave, id, deleteField } = this.props;\r\n        const { mobility, width, posY, posX } = this.state;\r\n\r\n        return (\r\n            <div\r\n                className={`stories-block ${className} ${mobility ? 'mobile' : ''}`}\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n                onMouseUp={this.onMouseUp}\r\n                style={\r\n                    {\r\n                        width: mobility ? width : '100%',\r\n                        // height: mobility ? 240 : 'auto',\r\n                        top: mobility ? posY - 16 : 'auto',\r\n                        left: mobility ? posX-width+48 : 'auto'\r\n                    }\r\n                }\r\n                ref={ref => this.storiesBlock = ref}\r\n            >\r\n                {children}\r\n                <div className=\"menu\">\r\n                    <button\r\n                        className=\"move menu-item\"\r\n                        onMouseDown={this.onMouseDown}\r\n                    ></button>\r\n                    <button className=\"basket menu-item\" onClick={() => deleteField(id)}></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Input from '../../../input';\r\n\r\nimport StoriesBlock from '../stories-block';\r\n\r\nexport default class TextField extends React.Component {\r\n\r\n    state = {\r\n        value: '',\r\n        onFocus: false,\r\n        onHover: false,\r\n        showMenu: false\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        const { onFocus, onHover, showMenu } = this.state;\r\n\r\n        if (!onFocus && onHover && !showMenu) {\r\n            this.setState({\r\n                showMenu: true\r\n            })\r\n        }\r\n\r\n        if (onFocus && showMenu) {\r\n            this.setState({\r\n                showMenu: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { value, showMenu } = this.state;\r\n        const { id, deleteField, moveField } = this.props;\r\n\r\n        return (\r\n            <StoriesBlock\r\n                className={`with-border ${showMenu ? 'show-menu' : ''} stretch`}\r\n                onMouseEnter={() => this.setState({ onHover: true })}\r\n                onMouseLeave={() => this.setState({ onHover: false })}\r\n                id={id}\r\n                deleteField={deleteField}\r\n                moveField={moveField}\r\n            >\r\n                <Input\r\n                    value={value}\r\n                    className='text field story-item'\r\n                    tagName='div'\r\n                    placeholder='...'\r\n                    onChange={evt => this.setState({ value: evt.target.value })}\r\n                    onFocus={() => this.setState({ onFocus: true })}\r\n                    onBlur={() => this.setState({ onFocus: false })}\r\n                />\r\n            </StoriesBlock>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Input from '../../../input';\r\n\r\nimport StoriesBlock from '../stories-block';\r\n\r\nexport default class QuoteField extends React.Component {\r\n    showMenuClass = 'show-menu';\r\n\r\n    state = {\r\n        value: '',\r\n        onFocus: false,\r\n        onHover: false,\r\n        showMenu: false\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        const { onFocus, onHover, showMenu } = this.state;\r\n\r\n        if (!onFocus && onHover && !showMenu) {\r\n            this.setState({\r\n                showMenu: true\r\n            })\r\n        }\r\n\r\n        if (onFocus && showMenu) {\r\n            this.setState({\r\n                showMenu: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { value, showMenu } = this.state;\r\n        const {id, deleteField, moveField} = this.props;\r\n\r\n        return (\r\n            <StoriesBlock\r\n                className={`with-border ${showMenu ? this.showMenuClass : ''} stretch`}\r\n                onMouseEnter={() => this.setState({ onHover: true })}\r\n                onMouseLeave={() => this.setState({ onHover: false })}\r\n                id={id}\r\n                deleteField= {deleteField}\r\n                moveField={moveField}\r\n            >\r\n                <Input\r\n                    value={value}\r\n                    className='quote field story-item'\r\n                    tagName='div'\r\n                    placeholder='...'\r\n                    onChange={evt => this.setState({ value: evt.target.value })}\r\n                    onFocus={() => this.setState({ onFocus: true })}\r\n                    onBlur={() => this.setState({ onFocus: false })}\r\n                />\r\n            </StoriesBlock>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport StoriesBlock from '../stories-block';\r\n\r\nconst ImageField = ({ deleteField, moveField, urlToImage, id }) => {\r\n\r\n    return (\r\n        <StoriesBlock deleteField={deleteField} moveField={moveField} id={id} className=\"show-menu with-border stretchs\">\r\n            <img src={urlToImage} alt='' className='image-field story-item img'/>\r\n        </StoriesBlock>\r\n    )\r\n}\r\n\r\nexport default ImageField;","import React from 'react';\r\nimport StoriesBlock from '../stories-block';\r\n\r\nconst Distributor = ({deleteField, moveField, id}) => {\r\n    return (\r\n        <StoriesBlock deleteField={deleteField} moveField={moveField} className=\"show-menu distributor-menu\" id={id}>\r\n            <div className='distributor  story-item'></div>\r\n        </StoriesBlock>\r\n    )\r\n}\r\n\r\nexport default Distributor;","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport TextField from './text-field';\r\nimport QuoteField from './quote-field';\r\nimport ImageField from './image-field';\r\nimport Distributor from './distributor';\r\n\r\nexport default ({ fiedls, removeFieldFunc, moveFieldFunc }) => {\r\n    const [storiesBlocks, setStoriesBlocks] = useState([]);\r\n\r\n    const createStoriesBlocks = useCallback((fields) => fields.map(field => {\r\n        const { id, type } = field;\r\n\r\n        if (type === 'text') return (\r\n            <TextField key={id} id={id} deleteField={removeFieldFunc} moveField={moveFieldFunc}/>\r\n        )\r\n\r\n        else if (type === 'quote') return (\r\n            <QuoteField key={id} id={id} deleteField={removeFieldFunc} moveField={moveFieldFunc} />\r\n        )\r\n\r\n        else if (type === 'distributor') return (\r\n            <Distributor key={id} id={id} deleteField={removeFieldFunc} moveField={moveFieldFunc} />\r\n        )\r\n\r\n        else {\r\n            const url = type.split(' ')[1];\r\n            return (\r\n                <ImageField key={id} id={id} deleteField={removeFieldFunc} moveField={moveFieldFunc} urlToImage={url}/>\r\n            )\r\n        }\r\n    }), [moveFieldFunc, removeFieldFunc])\r\n\r\n    useEffect(() => {\r\n        setStoriesBlocks(\r\n            createStoriesBlocks(fiedls)\r\n        )\r\n    }, [createStoriesBlocks, fiedls]);\r\n\r\n    return (\r\n        <div className='body'>\r\n            {storiesBlocks}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { withStorytellerService } from '../../hoc';\r\n\r\nconst ImageField = ({ children, onClick, className, storytellerService }) => {\r\n\r\n    const handleChange = evt => {\r\n        storytellerService.image.post(evt.target.files[0])\r\n            .then(urlToImage => {\r\n                onClick(`img ${storytellerService.image.get(urlToImage)}`);\r\n            })\r\n            .catch(() => { });\r\n\r\n        evt.target.value = null;\r\n    }\r\n\r\n    return (\r\n        <label className={className}>\r\n            <input\r\n                type=\"file\"\r\n                onChange={handleChange}\r\n                accept=\".jpg, .jpeg, .png\"\r\n                name=\"upload-image\"\r\n            />\r\n            <span>\r\n                {children}\r\n            </span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default withStorytellerService()(ImageField)","import React from 'react';\r\nimport AddImageBtn from './add-image';\r\n\r\nexport default ({ addField }) => {\r\n    return (\r\n        <div className='add-field-buttons-group'>\r\n            <button\r\n                className='add-field add-text-field'\r\n                onClick={() => addField('text')}\r\n            >\r\n                <span>Текст</span>\r\n            </button>\r\n            <button\r\n                className='add-field add-quote-field'\r\n                onClick={() => addField('quote')}\r\n            >\r\n                <span>Цитата</span>\r\n            </button>\r\n            <AddImageBtn className='add-field add-img-field' onClick={addField}>\r\n                Зображення\r\n            </AddImageBtn>\r\n\r\n            <button\r\n                className='add-field add-distributor'\r\n                onClick={() => addField('distributor')}\r\n            >\r\n                <span>Розподілювач</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport TitleField from './title-field';\r\nimport Body from './body';\r\nimport AddFieldButtonsGround from './add-field-buttons-group';\r\n\r\nexport default class StoryEditor extends React.Component {\r\n\r\n    state = {\r\n        bodyField: [\r\n            {\r\n                type: 'text',\r\n                id: 0\r\n            }\r\n        ]\r\n    }\r\n\r\n    generateId = () => Date.now().toString() + Math.random();\r\n\r\n    addField = (type) => this.setState(({ bodyField }) => {\r\n        return {\r\n            bodyField: [\r\n                ...bodyField,\r\n                {\r\n                    type,\r\n                    id: this.generateId()\r\n                }\r\n            ]\r\n        }\r\n    })\r\n\r\n    removeField = (fieldId) => {\r\n        const { bodyField } = this.state;\r\n        const id = bodyField.findIndex(field => field.id === fieldId);\r\n\r\n        let newBodyFields = bodyField.slice(0, bodyField.length);\r\n        newBodyFields.splice(id, 1);\r\n        this.setState({\r\n            bodyField: newBodyFields\r\n        })\r\n    }\r\n\r\n    moveField = (f, l) => {\r\n        const { bodyField } = this.state;\r\n\r\n        let a = bodyField.slice(0, bodyField.length);\r\n        a.splice(f, 1);\r\n\r\n        a.splice(l, 0, bodyField[f]);\r\n\r\n        this.setState({bodyField: a});\r\n    }\r\n\r\n    render = () => {\r\n        const { bodyField } = this.state;\r\n\r\n        return (\r\n            <div className='story-editor'>\r\n                <TitleField />\r\n                <Body fiedls={bodyField} removeFieldFunc={this.removeField} moveFieldFunc={this.moveField} />\r\n                <AddFieldButtonsGround addField={this.addField} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n// import { withRouter } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './style.scss';\r\n\r\nimport defaultImage from './img/default-image.png';\r\n\r\nconst StoryPreview = ({ title, body, urlToImage, publishedAt: date, likes, comments, views, id, className = '' }) => {\r\n    let history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        history.push('/stories/' + id);\r\n    }\r\n\r\n    return (\r\n        <div className={`story-preview ${className}`} onClick={handleClick}>\r\n            <div className='img'>\r\n                <img src={urlToImage || defaultImage} alt=\"\" />\r\n            </div>\r\n            <div className='body'>\r\n                <div className=\"main-info\">\r\n                    <h3>{title}</h3>\r\n                    <p>{body}</p>\r\n                </div>\r\n                <div className=\"bottom-group\">\r\n                    <div className=\"left\">\r\n                        <div className=\"likes num\"><span>{likes}</span></div>\r\n                        <div className=\"comments num\"><span>{comments}</span></div>\r\n                        <div className=\"views num\"><span>{views}</span></div>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <div className=\"publishedAt\">\r\n                            {\r\n                                date ? (\r\n                                    <React.Fragment>\r\n                                        <span>{date.day} </span>\r\n                                        <span>{date.month} </span>\r\n                                        <span>{date.year}</span>\r\n                                    </React.Fragment>\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoryPreview;","import React from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport StoryPreview from '../story-preview';\r\nimport { useState } from 'react';\r\n\r\nimport './stories-list.scss';\r\n\r\nconst StoriesList = ({ storiesList }) => {\r\n    const [stories, setStories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const stories = storiesList.map(story => {\r\n            const { publishedAt, views, comments, likes, _id, previewImage, previewTitle, previewBody } = story;\r\n\r\n            return (\r\n                <div className='story-preview__container' key={_id}>\r\n                    <StoryPreview\r\n                        id={_id}\r\n                        likes={likes.length}\r\n                        comments={comments.length}\r\n                        views={views}\r\n                        body={previewBody || '...'}\r\n                        title={previewTitle}\r\n                        publishedAt={publishedAt}\r\n                        urlToImage={previewImage}\r\n                    />\r\n                </div>\r\n            )\r\n        })\r\n\r\n        setStories(stories);\r\n    }, [storiesList])\r\n\r\n    return (\r\n        <div className='stories-container' >\r\n            {\r\n                stories\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoriesList;","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"simple-loader-container\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\n\r\nimport Genres from '../push-story/genres';\r\nimport { connect } from 'react-redux';\r\n\r\nimport StoriesList from './stories';\r\n\r\nimport { SimpleLoader } from '../loader';\r\n\r\nconst NoResultH1 = () => {\r\n    return (\r\n        <h3 className='find-nothing'>\r\n            За вашим запитом результатів не знайшлося\r\n        </h3>\r\n    )\r\n}\r\n\r\nclass Stories extends React.Component {\r\n    input = React.createRef();\r\n\r\n    state = {\r\n        stories: [],\r\n        search: '',\r\n        usedGenres: [],\r\n        sortBy: 'Спочатку новіші',\r\n        openSortByFilter: false,\r\n\r\n        loading: false\r\n    }\r\n\r\n    createFilter = () => {\r\n        const { usedGenres, search, sortBy } = this.state;\r\n\r\n        let query = {\r\n            find: {\r\n\r\n            },\r\n            selection: {\r\n\r\n            }\r\n        };\r\n\r\n        switch (sortBy) {\r\n            case 'Спочатку новіші':\r\n                query.sort = {\r\n                    publishedAt: -1\r\n                }\r\n                break;\r\n\r\n            case 'Спочатку найпопулярніші':\r\n                query.sort = {\r\n                    views: -1,\r\n                    likes: -1\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        if (search.length > 0) {\r\n            query.find.previewTitle = { '$regex': `.*${search}.*` }\r\n        }\r\n\r\n        if (usedGenres.length > 0) {\r\n            query.where = {\r\n                key: 'genres',\r\n                value: usedGenres\r\n            }\r\n        }\r\n\r\n        query.selection = {\r\n            publishedAt: true,\r\n            views: true,\r\n            'comments._id': true,\r\n            'likes._id': true,\r\n            _id: true,\r\n            previewImage: true,\r\n            previewTitle: true,\r\n            previewBody: true\r\n        }\r\n\r\n        this.setState({\r\n            stories: [],\r\n            loading: true\r\n        })\r\n\r\n        this.getStories(query);\r\n    }\r\n\r\n    getStories = (query) => {\r\n        const { storytellerService } = this.props;\r\n\r\n        storytellerService.stories.getAll(query)\r\n            .then(storiesList => {\r\n\r\n                this.setState({\r\n                    stories: storiesList,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    stories: [],\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    handleSearch = ({ target: { value } }) => {\r\n        this.setState({\r\n            search: value\r\n        })\r\n    }\r\n\r\n    removeLastUsedGenre = () => {\r\n        const { usedGenres } = this.state;\r\n        console.log(123);\r\n        let newArr = usedGenres.slice(0, usedGenres.length - 1);\r\n        newArr.splice(newArr.length, 1);\r\n\r\n        this.setState({\r\n            usedGenres: newArr\r\n        })\r\n    }\r\n\r\n    addGenre = (genre) => {\r\n\r\n        const { usedGenres } = this.state;\r\n\r\n\r\n        const idx = usedGenres.findIndex(g => g === genre);\r\n\r\n        if (idx !== -1) {\r\n            this.removeGenre(genre);\r\n        }\r\n        else {\r\n\r\n            this.setState({\r\n                usedGenres: [\r\n                    ...usedGenres,\r\n                    genre\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    removeGenre = (genre) => {\r\n        this.setState(({ usedGenres }) => {\r\n            const id = usedGenres.findIndex(g => g === genre);\r\n\r\n            if (id === -1) {\r\n                return {\r\n                    usedGenres\r\n                }\r\n            }\r\n            else {\r\n                let newArr = usedGenres.slice(0, usedGenres.length);\r\n                newArr.splice(id, 1);\r\n\r\n                return {\r\n                    usedGenres: newArr\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.input.current.focus();\r\n    }\r\n\r\n    changeSortByFilter = (value) => {\r\n        this.setState({\r\n            sortBy: value\r\n        })\r\n    }\r\n\r\n    handleMouseDown = ({ path }) => {\r\n        let con = true;\r\n\r\n        for (let i = 0; i < path.length - 2; i++) {\r\n            if (path[i].classList.contains('sort-by-filter')) {\r\n                con = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (con) {\r\n            this.setState({\r\n                openSortByFilter: false\r\n            })\r\n        }\r\n\r\n        document.removeEventListener('mouseup', this.handleMouseDown, false);\r\n    }\r\n\r\n    openSortByFilter = () => {\r\n        this.setState(({ openSortByFilter }) => {\r\n            if (!openSortByFilter) {\r\n                document.addEventListener('mouseup', this.handleMouseDown, false);\r\n            }\r\n\r\n            return {\r\n                openSortByFilter: !openSortByFilter\r\n            }\r\n        })\r\n    }\r\n\r\n    onKeyDown = ({ key }) => {\r\n        if (key === 'Enter') {\r\n            this.createFilter();\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.title = 'Розповіді – Storyteller';\r\n        this.createFilter();\r\n\r\n        document.addEventListener('keydown', this.onKeyDown, false);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener('mouseup', this.handleMouseDown, false);\r\n        document.removeEventListener('keydown', this.onKeyDown, false);\r\n    }\r\n\r\n    render() {\r\n        const { stories, search, usedGenres, sortBy, openSortByFilter, loading } = this.state;\r\n        const { genresList } = this.props;\r\n\r\n        let showNothing = false;\r\n\r\n        if (!loading && stories.length === 0) {\r\n            showNothing = true;\r\n        }\r\n\r\n        return (\r\n            <div className=\"stories-page\">\r\n                <div className=\"filter\">\r\n                    <div className=\"search\" onClick={this.handleFocus}>\r\n                        <div className='icon' onClick={this.handleFocus}></div>\r\n                        <input type=\"text\" value={search} placeholder='Пошук' onChange={this.handleSearch} ref={this.input} />\r\n                    </div>\r\n                    <Genres\r\n                        removeLastUsedGenre={this.removeLastUsedGenre}\r\n                        usedGenres={usedGenres}\r\n                        genresList={genresList}\r\n                        addGenre={this.addGenre}\r\n                        removeGenre={this.removeGenre}\r\n                    />\r\n                    <div className={`sort-by-filter ${openSortByFilter ? 'open' : ''}`} onClick={() => this.openSortByFilter()}>\r\n                        <div className='sort-by-preview'>\r\n                            <span>\r\n                                {sortBy}\r\n                            </span>\r\n                        </div>\r\n                        <div className='sort-by-filters'>\r\n                            <div className='sort-by' onClick={() => this.changeSortByFilter('Спочатку новіші')}>\r\n                                <span>\r\n                                    Спочатку новіші\r\n                                </span>\r\n                            </div>\r\n                            <div className='sort-by' onClick={() => this.changeSortByFilter('Спочатку найпопулярніші')}>\r\n                                <span>\r\n                                    Спочатку найпопулярніші\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='blue-btn small' onClick={this.createFilter}>\r\n                        <button>\r\n                            <span>\r\n                                Застосувати\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    loading ? <SimpleLoader /> :\r\n                        showNothing ?\r\n                            <NoResultH1 /> :\r\n                            <StoriesList storiesList={stories} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ genresList }) => ({ genresList }))(\r\n    withStorytellerService()(Stories)\r\n);","import React from 'react';\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nconst StoryBlock = ({ children, className, tagName, _ref, onClick }) => {\r\n    return (\r\n        <ContentEditable className={`story-block ${className}`} tagName={tagName} html={children} disabled ref={_ref} onClick={onClick} />\r\n    )\r\n}\r\n\r\nexport default StoryBlock;","import React from 'react';\r\n\r\nexport default ({ backgroundImage, func, children, closeContextMenu }) => {\r\n\r\n    const handleClick = () => {\r\n        func();\r\n        closeContextMenu();\r\n    }\r\n\r\n    return (\r\n        <div className='context-menu-item' onClick={handleClick}>\r\n            <div className='icon' style={{\r\n                backgroundImage: `url(${backgroundImage})` || 'none'\r\n            }}>\r\n            </div>\r\n            <div className='item-text'>\r\n                <span>\r\n                    {children}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport MenuItem from './menu-item';\r\n\r\nimport './style.scss';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useCallback } from 'react';\r\n\r\nconst ContextMenu = ({ items, open, contextX, contextY, closeFunc: close }) => {\r\n\r\n    const [myItemList, setMyItemList] = useState([]);\r\n    const [reverse, EnableReverse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const newMyItemList = items.map(({ text, func, id, backgroundImage }) => {\r\n            return (\r\n                <MenuItem\r\n                    key={id}\r\n                    backgroundImage={backgroundImage}\r\n                    func={func}\r\n                    closeContextMenu={close}\r\n                >\r\n                    {text}\r\n                </MenuItem>\r\n            )\r\n        })\r\n\r\n        setMyItemList(newMyItemList);\r\n    }, [items, close])\r\n\r\n    const closeContextMenu = useCallback(() => {\r\n        document.removeEventListener('scroll', closeContextMenu, false);\r\n        document.removeEventListener('wheel', closeContextMenu, false);\r\n\r\n        close();\r\n    }, [close]);\r\n\r\n    const handleClick = useCallback(({ path }) => {\r\n        let con = true;\r\n\r\n        for (let i = 0; i < path.length - 2; i++) {\r\n            if (path[i].classList.contains('context-menu-container')) {\r\n                con = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (con) {\r\n            closeContextMenu();\r\n            document.removeEventListener('mouseup', handleClick, false);\r\n        };\r\n    }, [closeContextMenu])\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            document.removeEventListener('mouseup', handleClick, false);\r\n            document.addEventListener('mouseup', handleClick, false);\r\n\r\n            document.removeEventListener('scroll', closeContextMenu, false);\r\n            document.addEventListener('scroll', closeContextMenu, false);\r\n\r\n            document.removeEventListener('wheel', closeContextMenu, false);\r\n            document.addEventListener('wheel', closeContextMenu, false);\r\n        }\r\n\r\n        const deltaHeight = window.innerHeight - contextY;\r\n        const contextMenuHeight = items.length * 30 + 30;\r\n\r\n        if (deltaHeight <= contextMenuHeight) {\r\n            EnableReverse(true);\r\n        }\r\n        else {\r\n            EnableReverse(false);\r\n        }\r\n\r\n    }, [closeContextMenu, handleClick, open, contextY, items.length])\r\n\r\n\r\n    return (\r\n        <div className={`context-menu-container ${open ? 'open' : ''}`}\r\n            style={{\r\n                left: contextX,\r\n                top: contextY\r\n            }}\r\n        >\r\n            <div className={`context-menu-inner ${reverse ? 'reverse': ''}`}>\r\n                {myItemList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContextMenu;","import React from 'react';\r\n\r\nimport './comment-style.scss';\r\n\r\nimport StoryBlock from './story-block';\r\n\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport UserAvatar from '../user-avatar';\r\nimport { withStorytellerService } from '../hoc';\r\n\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\n\r\nimport ContextMenu from '../context-menu';\r\n\r\nclass Comment extends React.Component {\r\n\r\n    loadMyLike = true;\r\n    loadMyComment = true;\r\n    bigCommentBlock = React.createRef();\r\n\r\n    state = {\r\n        urlToImage: null,\r\n        surname: null,\r\n        username: null,\r\n        name: null,\r\n        storyId: null,\r\n        commentId: null,\r\n        likes: [],\r\n\r\n        showComment: false,\r\n        bigComment: false,\r\n\r\n        liked: false,\r\n        myComment: false,\r\n\r\n        openContextMenu: false,\r\n        contextX: 0,\r\n        contextY: 0\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        const { likes } = this.state;\r\n        const { userData, userId: commentUserId, body: comment } = this.props;\r\n        const { userId } = userData;\r\n\r\n\r\n        if (this.loadMyLike) {\r\n            if (userId) {\r\n                const myLikeId = likes.findIndex(like => like.userId === userId);\r\n\r\n                if (myLikeId !== -1) {\r\n                    this.setState({\r\n                        liked: true\r\n                    })\r\n                }\r\n\r\n                if (commentUserId === userId) {\r\n                    this.setState({\r\n                        myComment: true\r\n                    })\r\n                }\r\n\r\n                this.loadMyLike = false;\r\n            }\r\n        }\r\n        if (this.loadMyComment && comment) {\r\n            if (this.bigCommentBlock.current.el.current.clientHeight > 200) {\r\n                this.setState({\r\n                    bigComment: true\r\n                })\r\n            }\r\n\r\n            this.loadMyComment = false;\r\n        }\r\n    }\r\n\r\n    likeComment = () => {\r\n        this.redirectToLoginFromUnauth(() => {\r\n            const { storytellerService, storyId, id } = this.props;\r\n            const { liked } = this.state;\r\n\r\n            let likeFunc = storytellerService.stories;\r\n\r\n            if (liked) {\r\n                likeFunc = likeFunc.commentUnlike;\r\n            }\r\n            else {\r\n                likeFunc = likeFunc.commentLike;\r\n            }\r\n\r\n            this.setState(({ liked }) => ({ liked: !liked }));\r\n\r\n            likeFunc(storyId, id)\r\n                .then(() => {\r\n                    this.loadLikes();\r\n                })\r\n                .catch(this.serverError)\r\n        });\r\n    }\r\n\r\n    loadLikes = () => {\r\n        const { storytellerService, id, storyId } = this.props\r\n\r\n        const selection = {\r\n            \"likes\": true\r\n        }\r\n\r\n        const find = {\r\n            \"comments._id\": id\r\n        }\r\n\r\n        storytellerService.stories.getSmallData(storyId, selection, find)\r\n            .then(({ likes }) => {\r\n                this.setState({ likes });\r\n            })\r\n            .catch(this.serverError)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.loadComment();\r\n    }\r\n\r\n    loadComment = () => {\r\n        const { storytellerService, userId, likes } = this.props;\r\n\r\n        this.setState({\r\n            likes\r\n        })\r\n\r\n        const selection = {\r\n            username: true,\r\n            name: true,\r\n            surname: true,\r\n            urlToImage: true\r\n        }\r\n\r\n        storytellerService.users.getById(userId, selection)\r\n            .then(({ username, surname, name, urlToImage }) => {\r\n                this.setState({\r\n                    username,\r\n                    surname,\r\n                    name,\r\n                    urlToImage\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    username: '',\r\n                    name: 'Видалений користувач'\r\n                })\r\n            })\r\n    }\r\n\r\n    openAllComment = () => {\r\n        const { bigComment } = this.state;\r\n\r\n        if (bigComment) {\r\n\r\n            this.setState(({ showComment }) => {\r\n                return {\r\n                    showComment: !showComment\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    openAllCommentFromCommentText = () => {\r\n        const { showComment } = this.state;\r\n\r\n        if (showComment) {\r\n            this.openAllComment();\r\n        }\r\n    }\r\n\r\n    openContextMenu = ({ clientX, clientY }) => {\r\n        this.setState({\r\n            openContextMenu: true,\r\n            contextX: clientX,\r\n            contextY: clientY\r\n        })\r\n    }\r\n\r\n\r\n    closeContextMenu = () => {\r\n        this.setState({\r\n            openContextMenu: false\r\n        })\r\n    }\r\n\r\n    complainComment = () => this.redirectToLoginFromUnauth(() => {\r\n        const { addErrorBanner } = this.props;\r\n\r\n        addErrorBanner('Скарга буде розлянута', 3);\r\n    })\r\n\r\n    removeComment = () => {\r\n        this.redirectToLoginFromUnauth(\r\n            () => {\r\n                const { storyId, id, storytellerService, updateCommentsList } = this.props;\r\n\r\n                storytellerService.stories.removeComment(storyId, id)\r\n                    .then(() => {\r\n                        updateCommentsList();\r\n                    })\r\n                    .catch(this.serverError);\r\n            }\r\n        )\r\n    }\r\n\r\n    redirectToLoginFromUnauth = (FIRST, SECOND) => {\r\n        const { needLogin, location: { pathname }, history, setNextRoute } = this.props;\r\n\r\n        if (needLogin) {\r\n            setNextRoute(pathname);\r\n            history.push('/registration');\r\n\r\n            if (SECOND) {\r\n                SECOND();\r\n            }\r\n        }\r\n        else {\r\n            FIRST();\r\n        }\r\n    }\r\n\r\n    serverError = (error) => {\r\n        const { addErrorBanner } = this.props;\r\n\r\n        console.log(error);\r\n        addErrorBanner('На сервері виникли проблеми, будь-ласка, спробуйте ще раз через декілька секунд', 3);\r\n    }\r\n\r\n    render = () => {\r\n        const {\r\n            username,\r\n            name,\r\n            surname,\r\n            urlToImage,\r\n            likes,\r\n            liked,\r\n            myComment,\r\n            showComment,\r\n            bigComment,\r\n            openContextMenu,\r\n            contextX,\r\n            contextY\r\n        } = this.state;\r\n\r\n        const {\r\n            body = '',\r\n            publishedAt: date\r\n        } = this.props;\r\n\r\n        let nameBlock = null;\r\n\r\n        let contextMenu = [];\r\n\r\n        if (myComment) {\r\n            contextMenu.push({\r\n                text: 'Видалити',\r\n                func: this.removeComment,\r\n                id: 1\r\n            });\r\n        }\r\n        else {\r\n            contextMenu.push({\r\n                text: 'Поскаржитися',\r\n                func: this.complainComment,\r\n                id: 0\r\n            });\r\n        }\r\n\r\n        if (name) {\r\n            nameBlock = (\r\n                <div className=\"name-and-surname\">\r\n                    <span>{name}</span><span> {surname}</span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className='comment-container'>\r\n                <UserAvatar className='user-avatar' userId={username} urlToImage={urlToImage} />\r\n                <div className='comment-inner'>\r\n                    <div className='author-info'>\r\n                        <div className=\"names\">\r\n                            {nameBlock}\r\n                            <div className=\"username\">\r\n                                <Link to={`/authors/${username}`}>\r\n                                    <span>@{username}</span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='comment-context-menu-open-btn' onClick={this.openContextMenu}>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={`${showComment ? 'open' : ''} ${bigComment ? '' : 'hidden'} user-comment`}\r\n                        onClick={this.openAllCommentFromCommentText}\r\n                    >\r\n                        <StoryBlock\r\n                            className={`comment-text`}\r\n                            tagName='div'\r\n                            _ref={this.bigCommentBlock}\r\n                        >\r\n                            {body}\r\n                        </StoryBlock>\r\n                        <div className={`all-comment-btn ${showComment ? 'open' : ''}`}\r\n                            onClick={this.openAllComment}>\r\n                            <span>\r\n                                Показати повністю\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bottom\">\r\n                        <div className=\"left\">\r\n                            <div className={`likes num ${liked ? 'active' : ''}`} onClick={this.likeComment}>\r\n                                <span>{likes.length.toLocaleString('en')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            <div className=\"publishedAt\">\r\n                                {\r\n                                    date ? (\r\n                                        <React.Fragment>\r\n                                            <span>{date.day} </span>\r\n                                            <span>{date.month} </span>\r\n                                            <span>{date.year}</span>\r\n                                        </React.Fragment>\r\n                                    ) : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <ContextMenu items={contextMenu} open={openContextMenu}\r\n                    contextX={contextX}\r\n                    contextY={contextY}\r\n                    closeFunc={this.closeContextMenu}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ userData, needLogin }) => ({ userData, needLogin }), actions)(\r\n    withStorytellerService()(\r\n        withRouter(Comment)\r\n    )\r\n);","import React from 'react';\r\nimport Input from '../input';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './comment-style.scss';\r\n\r\nimport { connect } from 'react-redux';\r\nimport UserAvatar from '../user-avatar';\r\n\r\nimport actions from '../../actions';\r\n\r\nclass MyComment extends React.Component {\r\n    state = {\r\n        comment: ''\r\n    }\r\n\r\n    addComment = () => {\r\n        console.log('comment');\r\n    }\r\n\r\n    handleChange = ({ target: { value: comment } }) => this.setState({ comment });\r\n\r\n    handleComment = () => {\r\n        const { comment } = this.state;\r\n        const { storyId, storytellerService, loadComments, addErrorBanner } = this.props;\r\n\r\n        storytellerService.stories.comment(storyId, comment).then(() => {\r\n            this.setState({\r\n                comment: ''\r\n            })\r\n            loadComments();\r\n        })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, спробуйте ще раз через декілька секунд', 3);\r\n            })\r\n    }\r\n\r\n    render = () => {\r\n        const { comment } = this.state;\r\n        const { name, surname, username, urlToImage } = this.props.userData;\r\n\r\n        let nameBlock = null;\r\n\r\n        if (name && surname) {\r\n            nameBlock = (\r\n                <div className=\"name-and-surname\">\r\n                    <span>{name} </span><span>{surname}</span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='comment-container'>\r\n                <UserAvatar className='user-avatar' userId={username} urlToImage={urlToImage} />\r\n                <div className='comment-inner'>\r\n                    <div className='author-info'>\r\n                        <div className=\"names\">\r\n                            {nameBlock}\r\n                            <div className=\"username\">\r\n                                <Link to={`/authors/${username}`}>\r\n                                    <span>@{username}</span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Input className='my-comment' value={comment} placeholder=\"Додати комментарій\" onChange={this.handleChange} disabledAutoFocus />\r\n                    <div className='blue-btn little-blue-btn'>\r\n                        <button onClick={this.handleComment}>\r\n                            <span>\r\n                                Комментувати\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ userData }) => ({ userData }), actions)(\r\n    withStorytellerService()(MyComment)\r\n);","import React from 'react';\r\nimport { withStorytellerService } from '../hoc';\r\n\r\nimport './style.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Comment from './comment';\r\n\r\nimport StoryBlock from './story-block';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport MyComment from './my-comment';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport actions from '../../actions';\r\n\r\nclass StoryPage extends React.Component {\r\n\r\n    state = {\r\n        title: null,\r\n        body: null,\r\n        date: null,\r\n        comments: [],\r\n        likes: [],\r\n        author: null,\r\n        views: 0,\r\n        quote: null,\r\n        userId: null,\r\n        liked: false,\r\n        checkMyLike: true,\r\n        storyId: null,\r\n        username: null,\r\n\r\n        commentBlocks: []\r\n    }\r\n\r\n    createTitleBlock = (title) =>\r\n        <StoryBlock className='title' tagName='h3'>\r\n            {title}\r\n        </StoryBlock>;\r\n\r\n    createBodyBlocks = (bodyBlocks) => bodyBlocks.map((block, id) => {\r\n        const { type, value } = block;\r\n\r\n        let sb = null;\r\n\r\n        if (type === 'text') {\r\n            sb = <StoryBlock tagName='p' className={type} key={id}>{value}</StoryBlock>\r\n        }\r\n        else if (type === 'quote') {\r\n            sb = <StoryBlock tagName='blockquote' className={type} key={id}>{value}</StoryBlock>\r\n\r\n            if (id === 0) {\r\n                this.setState(() => ({ quote: sb }));\r\n                sb = null;\r\n            }\r\n        }\r\n        else if (type === 'hr') {\r\n            sb = <div className='hr' key={id}></div>\r\n        }\r\n        else if (type === 'img') {\r\n            sb = <img src={value} alt=\"\" key={id} />\r\n        }\r\n\r\n        return sb;\r\n    })\r\n\r\n    createBeautyQuote = (quote, author) => {\r\n        const { username } = this.state;\r\n        if (quote && author) {\r\n            return (\r\n                <div className='beauty-quote'>\r\n                    {quote}\r\n                    <Link to={`/authors/${username}`}>\r\n                        <span className='author'>\r\n                            {author}\r\n                        </span>\r\n                        <span className='username'>\r\n                            @{username}\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n\r\n    loadStory = (storyData) => {\r\n        const { title, body, publishedAt, userId, likes, comments, views, previewTitle } = storyData;\r\n        document.title = previewTitle;\r\n        const { storytellerService } = this.props;\r\n\r\n        const bodyBlocks = this.createBodyBlocks(body);\r\n\r\n        this.setState(() => ({\r\n            title: this.createTitleBlock(title),\r\n            body: bodyBlocks,\r\n            date: publishedAt,\r\n            views: views,\r\n            likes: likes,\r\n            comments: comments,\r\n            userId\r\n        }))\r\n\r\n        this.createComments(comments);\r\n\r\n        const selection = {\r\n            username: true,\r\n            name: true,\r\n            surname: true\r\n        }\r\n\r\n        storytellerService.users.getById(userId, selection).then(({ username, name, surname }) => {\r\n            let author = null;\r\n\r\n            if (name && surname) {\r\n                author = name + ' ' + surname;\r\n            }\r\n\r\n            this.setState(() => ({ author, username }))\r\n        })\r\n    }\r\n\r\n    createComments = (comments) => {\r\n        const { storytellerService, match: { params: { id: storyId } } } = this.props;\r\n\r\n        const coms = comments.reverse().map(({ _id, publishedAt, body, userId, likes }) => {\r\n            return <Comment\r\n                body={body}\r\n                publishedAt={storytellerService.convertData(publishedAt)}\r\n                userId={userId}\r\n                likes={likes}\r\n                key={_id}\r\n                storyId={storyId}\r\n                id={_id}\r\n                updateCommentsList={this.loadComments}\r\n            />\r\n        })\r\n\r\n        this.setState({\r\n            commentBlocks: coms\r\n        })\r\n    }\r\n\r\n    loadStoryDataOnService = (id) => {\r\n        const { storytellerService } = this.props;\r\n\r\n        storytellerService.stories.get(id)\r\n            .then(this.loadStory)\r\n            .catch(() => { })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { match: { params: { id } } } = this.props;\r\n\r\n        this.loadStoryDataOnService(id);\r\n\r\n        this.setState({ storyId: id })\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        const { userId } = this.props.userData;\r\n        const { likes, checkMyLike } = this.state;\r\n\r\n        if (userId && likes.length > 0 && checkMyLike) {\r\n            const myLike = likes.findIndex(like => like.userId === userId);\r\n\r\n            if (myLike !== -1) {\r\n                this.setState({\r\n                    liked: true,\r\n                    checkMyLike: false\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    liked: false,\r\n                    checkMyLike: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    like = () => {\r\n        const { match: { params: { id } }, storytellerService, addErrorBanner, needLogin, setNextRoute, location: { pathname }, history } = this.props;\r\n        const { liked } = this.state;\r\n\r\n        if (needLogin) {\r\n            setNextRoute(pathname);\r\n            history.push('/registration');\r\n        }\r\n        else {\r\n            let likeFunc = storytellerService.stories;\r\n\r\n            if (liked) {\r\n                likeFunc = likeFunc.unlike;\r\n            }\r\n            else {\r\n                likeFunc = likeFunc.like;\r\n            }\r\n\r\n            this.setState(({ liked }) => ({ liked: !liked }));\r\n\r\n            likeFunc(id)\r\n                .then(() => {\r\n                    this.loadLikes();\r\n                })\r\n                .catch(() => {\r\n                    addErrorBanner('На сервері виникли проблеми, будь-ласка, спробуйте ще раз через декілька секунд', 3);\r\n                })\r\n        }\r\n    }\r\n\r\n    loadLikes = () => {\r\n        const { storytellerService, addErrorBanner } = this.props;\r\n        const { storyId } = this.state;\r\n\r\n        const selection = {\r\n            \"likes\": true\r\n        }\r\n\r\n        storytellerService.stories.getSmallData(storyId, selection)\r\n            .then(({ likes }) => {\r\n                this.setState({ likes });\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, спробуйте ще раз через декілька секунд', 3);\r\n            })\r\n    }\r\n\r\n    loadComments = () => {\r\n        const { storytellerService, addErrorBanner } = this.props;\r\n        const { storyId } = this.state;\r\n\r\n        const selection = {\r\n            \"comments\": true\r\n        }\r\n\r\n        storytellerService.stories.getSmallData(storyId, selection)\r\n            .then(({ comments }) => {\r\n                this.setState({ comments });\r\n                this.createComments(comments);\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, спробуйте ще раз через декілька секунд', 3);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { title, body, date, comments, likes, author, views, quote, username, liked, storyId, commentBlocks } = this.state;\r\n        const { needLogin } = this.props;\r\n\r\n        const beautyQuote = this.createBeautyQuote(quote, author);\r\n        let absAuthor = null;\r\n        if (!beautyQuote && username) {\r\n            absAuthor =\r\n                <div className='author-container'>\r\n                    <Link to={`/authors/${username}`}>\r\n                        <span className='author'>\r\n                            {author}\r\n                        </span>\r\n                        <span className='username'>\r\n                            @{username}\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n        }\r\n\r\n        return (\r\n            <div className='story-page'>\r\n                <div className='story'>\r\n                    {title}\r\n                    {absAuthor}\r\n                    {beautyQuote}\r\n                    {body}\r\n                    <h3 className='-- to-be-continued ->>'>Далі буде</h3>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <div className=\"left\">\r\n                        <div className={`likes num ${liked ? 'active' : ''}`} onClick={this.like}><span>\r\n                            {likes.length.toLocaleString('en')}</span>\r\n                        </div>\r\n                        <div className=\"comments num\"><span>{comments.length.toLocaleString('en')}</span></div>\r\n                        <div className=\"views num\"><span>{views.toLocaleString('en')}</span></div>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <div className=\"publishedAt\">\r\n                            {\r\n                                date ? (\r\n                                    <React.Fragment>\r\n                                        <span>{date.day} </span>\r\n                                        <span>{date.month} </span>\r\n                                        <span>{date.year}</span>\r\n                                    </React.Fragment>\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='comments'>\r\n                    <div className=\"user-comments\">\r\n                        {\r\n                            needLogin ? (\r\n                                <div className='need-login'>\r\n                                    <span>\r\n                                        Увійдіть, щоб комментувати\r\n                                    </span>\r\n                                </div>\r\n                            ) : <MyComment storyId={storyId} loadComments={this.loadComments} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"comment-list\">\r\n                        {commentBlocks}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ userData, needLogin }) => ({ userData, needLogin }), actions)(\r\n    withStorytellerService()(\r\n        withRouter(StoryPage)\r\n    )\r\n)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './style.scss';\r\n\r\nimport actions from '../../actions';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nimport StoriesList from '../stories/stories';\r\nimport { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport UserAvatar from '../user-avatar';\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nconst UserPage = ({ storytellerService, match, userData: myData, addErrorBanner, needLogin, location: { pathname }, history, setNextRoute }) => {\r\n    const [storiesList, setStoriesList] = useState([]);\r\n    const [userData, setUserData] = useState({});\r\n    const [showAbout, setShowAbout] = useState(false);\r\n    const [bigAbout, setBigAbout] = useState(false);\r\n    const [aboutBlock, setAboutBlockRef] = useState(null);\r\n\r\n    const [imFollower, setImFollower] = useState(false);\r\n    const [followers, setFollowers] = useState([]);\r\n\r\n    const [myPage, setMyPage] = useState(false);\r\n    // const [myDrafts, setMyDraftsList] = useState([]); todo drafts\r\n\r\n\r\n    const { params: { id: userId } } = match;\r\n    const { username, name, surname, urlToImage, _id, about } = userData;\r\n    const { userId: myId, username: myUsername } = myData;\r\n\r\n    const getStories = useCallback(() => {\r\n        if (_id) {\r\n            let query = {\r\n                find: {},\r\n                selection: {}\r\n            }\r\n\r\n            query.find = {\r\n                userId: _id\r\n            }\r\n\r\n            query.selection = {\r\n                publishedAt: true,\r\n                views: true,\r\n                'comments._id': true,\r\n                'likes._id': true,\r\n                _id: true,\r\n                previewImage: true,\r\n                previewTitle: true,\r\n                previewBody: true\r\n            }\r\n\r\n            storytellerService.stories.getAll(query)\r\n                .then(storiesList => {\r\n                    setStoriesList(storiesList)\r\n                })\r\n                .catch(() => { })\r\n        }\r\n    }, [storytellerService.stories, _id]);\r\n\r\n    const getUserData = useCallback(() => {\r\n        storytellerService.users.get(userId)\r\n            .then(userData => {\r\n                setUserData({\r\n                    ...userData\r\n                })\r\n                setFollowers(userData.followers);\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, спробуйте ще раз через декілька секунд', 3);\r\n            })\r\n    }, [storytellerService.users, userId, addErrorBanner])\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n        getStories();\r\n    }, [getUserData, getStories])\r\n\r\n    useEffect(() => {\r\n        if (aboutBlock) {\r\n            if (aboutBlock.clientHeight > 210) {\r\n                setBigAbout(true);\r\n            }\r\n        }\r\n    }, [aboutBlock, userData])\r\n\r\n    useEffect(() => {\r\n        if (myId) {\r\n            const _idx = followers.findIndex(el => el.userId === myId);\r\n\r\n            if (_idx !== -1) {\r\n                setImFollower(true);\r\n            }\r\n        }\r\n    }, [followers, myId]);\r\n\r\n    useEffect(() => {\r\n        document.title = `${[name, surname].join(' ')}${name ? ' ' : ''}@${username || 'автор'}`;\r\n    }, [username, name, surname])\r\n\r\n    useEffect(() => {\r\n        if (myUsername === userId) {\r\n            setMyPage(true);\r\n        }\r\n        else {\r\n            setMyPage(false);\r\n        }\r\n    }, [userId, myUsername])\r\n\r\n    const follow = () => {\r\n        if (needLogin) {\r\n            setNextRoute(pathname);\r\n            history.push('/registration');\r\n        }\r\n        else {\r\n            if (myId === _id) {\r\n                addErrorBanner('Ви не можете підписатися на себе', 3)\r\n            }\r\n            else {\r\n                let followFunc = storytellerService.users;\r\n\r\n                if (!imFollower) {\r\n                    followFunc = followFunc.follow;\r\n                    setImFollower(true);\r\n                }\r\n\r\n                else {\r\n                    followFunc = followFunc.unfollow;\r\n                    setImFollower(false);\r\n                }\r\n\r\n                followFunc(_id)\r\n                    .then(() => {\r\n                        getUserFollowers();\r\n                    })\r\n                    .catch(() => {\r\n                        addErrorBanner('Спробуйте ще раз через декілька секунд', 3);\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    const getUserFollowers = () => {\r\n        const selection = {\r\n            followers: true\r\n        }\r\n\r\n        storytellerService.users.getSmallData(userId, selection)\r\n            .then(({ followers }) => {\r\n                setFollowers(followers);\r\n            })\r\n            .catch(() => {\r\n\r\n            })\r\n    }\r\n\r\n    const openAboutUser = () => {\r\n        if (bigAbout) {\r\n            setShowAbout(!showAbout);\r\n        }\r\n    }\r\n\r\n    const openAboutFromText = () => {\r\n        if (showAbout) {\r\n            openAboutUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='user-page'>\r\n            <div className=\"user-panel-container\">\r\n                <div className=\"top\">\r\n                    <UserAvatar className='user-avatar' userId={username} urlToImage={urlToImage} />\r\n                    <div className=\"right\">\r\n                        <div className=\"user-names\">\r\n                            <div className=\"name-and-surname\">\r\n                                <span>\r\n                                    {name}\r\n                                </span>\r\n                                <span>\r\n                                    {surname}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"username\">\r\n                                <span>\r\n                                    @{username}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"followers-panel\">\r\n                            {myPage ? null : <div className={`follow-btn ${imFollower ? 'unfollow' : ''}`} onClick={follow}>\r\n                                <span>\r\n                                    {\r\n                                        imFollower ? 'Відписатися' : 'Підписатись'\r\n                                    }\r\n                                </span>\r\n                            </div>}\r\n                            <div className=\"followers-panel-inner\">\r\n                                <div className=\"followers-list\">\r\n                                    <div className='logo'></div>\r\n                                    <div className='followers-list-inner'>\r\n                                        <span className='number'>\r\n                                            {followers.length.toLocaleString('en')}\r\n                                        </span>\r\n                                        <span>\r\n                                            підписників\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"stories-list-length\">\r\n                                    <div className='logo'></div>\r\n                                    <div className='stories-list-inner'>\r\n                                        <span>\r\n                                            історій:\r\n                                        </span>\r\n                                        <span className='number'>\r\n                                            {storiesList.length}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    {\r\n                        about ?\r\n                            <div className={`about-user ${showAbout ? 'open' : ''} ${bigAbout ? '' : 'hidden'}`} ref={ref => setAboutBlockRef(ref)}\r\n                                onClick={openAboutFromText}>\r\n                                <ContentEditable html={about} tagName='p' className='about-user-text' disabled />\r\n                                <div className={`all-about-user-btn ${showAbout ? 'open' : ''}`}\r\n                                    onClick={openAboutUser}>\r\n                                    <span>\r\n                                        Показати повністю\r\n                                    </span>\r\n                                </div>\r\n                            </div> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <StoriesList storiesList={storiesList} />\r\n            {/* <FollowersList /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ userData, needLogin }) => ({\r\n    userData,\r\n    needLogin\r\n})\r\n\r\nexport default connect(mapStateToProps, actions)(\r\n    withStorytellerService()(\r\n        withRouter(UserPage)\r\n    )\r\n)","import React from 'react';\r\nimport UserAvatar from '../user-avatar';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import { useCallback } from 'react';\r\n\r\nconst UserBlock = ({ name, surname, urlToImage, username, followers, history }) => {\r\n\r\n    // const handleClick = useCallback(() => {\r\n    //     history.push(`/authors/${username}`);\r\n    // }, [history, username])\r\n\r\n    return (\r\n        <div className='author-block'> \r\n            <UserAvatar className='user-avatar' userId={username} urlToImage={urlToImage} />\r\n            <div className=\"right\">\r\n                <div className=\"user-names\">\r\n                    <div className=\"name-and-surname\">\r\n                        <span>\r\n                            {name}\r\n                        </span>\r\n                        <span>\r\n                            {surname}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"username\">\r\n                        <Link to={`/authors/${username}`}>\r\n                            <span>\r\n                                @{username}\r\n                            </span>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"followers-list\">\r\n                    <div className='logo'></div>\r\n                    <div className='followers-list-inner'>\r\n                        <span className='number'>\r\n                            {followers.length.toLocaleString('en')}\r\n                        </span>\r\n                        <span>\r\n                            підписників\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserBlock);","import React from 'react';\r\nimport { withStorytellerService } from '../hoc';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\n\r\nimport AuthorBlock from './user-block';\r\n\r\nimport { SimpleLoader } from '../loader';\r\n\r\nimport './style.scss';\r\n\r\nconst NoResultH1 = () => {\r\n    return (\r\n        <h3 className='find-nothing'>\r\n            За вашим запитом результатів не знайшлося\r\n        </h3>\r\n    )\r\n}\r\n\r\nclass Authors extends React.Component {\r\n\r\n    input = React.createRef();\r\n\r\n    state = {\r\n        authorsList: [],\r\n        search: '',\r\n        loading: true\r\n    }\r\n\r\n    createAuthorsList = (query) => {\r\n        const { storytellerService, addErrorBanner } = this.props;\r\n\r\n        let find = storytellerService.users.getAll;\r\n\r\n        const skip = 0;\r\n        const limit = 20;\r\n\r\n        if (query) {\r\n            find = find(skip, limit, {}, query);\r\n        }\r\n        else {\r\n            find = find(skip, limit);\r\n        }\r\n\r\n        find.then((users) => {\r\n            this.createAuthorBlocks(users);\r\n        }).catch(() => {\r\n            addErrorBanner('На сервері виникли проблеми, будь-ласка, зачекайте', 5, 'white');\r\n        })\r\n    }\r\n\r\n    createAuthorBlocks = (users) => {\r\n        const newAuthorsList = users.map(user => {\r\n            const { urlToImage, username, name, surname, _id, followers } = user;\r\n\r\n            return (\r\n                <AuthorBlock\r\n                    key={_id}\r\n                    urlToImage={urlToImage}\r\n                    name={name}\r\n                    surname={surname}\r\n                    username={username}\r\n                    followers={followers} />\r\n            )\r\n        })\r\n\r\n        this.setState(({ authorsList }) => {\r\n            // return {\r\n            //     authorsList: [\r\n            //         ...authorsList,\r\n            //         ...newAuthorsList\r\n            //     ]\r\n            // }\r\n            return {\r\n                authorsList: newAuthorsList,\r\n                loading: false\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSearch = ({ target: { value } }) => {\r\n        this.setState({\r\n            search: value\r\n        })\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.input.current.focus();\r\n    }\r\n\r\n    createFilter = () => {\r\n        const { search } = this.state;\r\n\r\n        let find = {\r\n            \r\n        };\r\n\r\n        if (search.length > 0) {\r\n            find.username = { '$regex': `.*${search}.*` }\r\n        }\r\n\r\n        this.setState({\r\n            authorsList: [],\r\n            loading: true\r\n        })\r\n\r\n        this.createAuthorsList(find);\r\n    }\r\n\r\n    onKeyDown = ({ key }) => {\r\n        if (key === 'Enter') {\r\n            this.createFilter();\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.title = 'Автори – Storyteller';\r\n\r\n        this.createAuthorsList();\r\n\r\n        document.addEventListener('keydown', this.onKeyDown, false);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener('keydown', this.onKeyDown, false);\r\n    }\r\n\r\n    render() {\r\n        const { authorsList, search, loading } = this.state;\r\n\r\n        let showNothing = false;\r\n\r\n        if (!loading && authorsList.length === 0) {\r\n            showNothing = true;\r\n        }\r\n\r\n        return (\r\n            <div className='authors'>\r\n                <div className=\"filter\">\r\n                    <div className=\"search\" onClick={this.handleFocus}>\r\n                        <div className='icon' onClick={this.handleFocus}></div>\r\n                        <input type=\"text\" value={search} placeholder=\"Пошук (введіть ім'я користувача)\" onChange={this.handleSearch} ref={this.input} />\r\n                    </div>\r\n                    <div className='blue-btn small' onClick={this.createFilter}>\r\n                        <button>\r\n                            <span>\r\n                                Застосувати\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    loading ? <SimpleLoader /> :\r\n                    showNothing ?\r\n                        <NoResultH1 /> :\r\n                        authorsList\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    return {};\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(\r\n    withStorytellerService()(Authors)\r\n);","import React from 'react';\r\n\r\nconst UserAvatar = ({ className, urlToImage, onClick }) => {\r\n    return (\r\n        <div className={`${className} ${urlToImage ? '' : 'default'}`}\r\n            style={\r\n                urlToImage ? { backgroundImage: `url(${urlToImage})` } : {}\r\n            }\r\n            onClick={onClick}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAvatar;","import React from 'react';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\n\r\nimport Input from '../input';\r\n\r\nimport UserAvatar from './user-avatar';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\n\r\nclass ProfileEdit extends React.Component {\r\n    imageForm = React.createRef();\r\n\r\n    state = {\r\n        username: '',\r\n        name: '',\r\n        surname: '',\r\n        about: '',\r\n        email: '',\r\n\r\n        loadMyData: true,\r\n\r\n        trueEmail: true,\r\n        trueUser: true,\r\n\r\n        usernameTimer: null,\r\n\r\n        updateButtonEnable: false\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        const { trueUser, updateButtonEnable, trueEmail } = this.state;\r\n\r\n        this.loadMyData();\r\n\r\n        if (trueEmail && trueUser) {\r\n            if (!updateButtonEnable) {\r\n                this.setState({\r\n                    updateButtonEnable: true\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            if (updateButtonEnable) {\r\n                this.setState({\r\n                    updateButtonEnable: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    loadMyData = () => {\r\n        const { loadMyData } = this.state;\r\n        const { userData } = this.props;\r\n\r\n        const { username = '', email = '', name = '', surname = '', about = '' } = userData;\r\n\r\n        if (loadMyData && username) {\r\n\r\n            this.setState({\r\n                username,\r\n                email,\r\n                name,\r\n                surname,\r\n                about,\r\n                loadMyData: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.loadMyData();\r\n    }\r\n\r\n    clickOnImageForm = () => {\r\n        this.imageForm.current.click();\r\n    }\r\n\r\n    uploadImage = (evt) => {\r\n        const { storytellerService, addErrorBanner } = this.props;\r\n\r\n        storytellerService.image.post(evt.target.files[0])\r\n            .then(urlToImage => {\r\n                storytellerService.users.update({\r\n                    urlToImage: `${storytellerService.image.get(urlToImage)}`\r\n                })\r\n                    .then(() => {\r\n                        this.loadSmallData({\r\n                            urlToImage: true\r\n                        });\r\n                    })\r\n                    .catch(() => {\r\n                        this.serverError();\r\n                    })\r\n            })\r\n            .catch((status) => {\r\n                if (status === 400) {\r\n                    addErrorBanner('Можна завантажувати зображення у форматі png, jpg, jpeg')\r\n                }\r\n                else {\r\n                    this.serverError();\r\n                }\r\n            });\r\n\r\n        evt.target.value = null;\r\n    }\r\n\r\n    loadSmallData = (selection, uname) => {\r\n        const { storytellerService, userData, updateUserData, addErrorBanner } = this.props;\r\n        const { username } = userData;\r\n\r\n        storytellerService.users.getSmallData(uname || username, selection)\r\n            .then(userData => {\r\n                updateUserData({\r\n                    ...userData\r\n                })\r\n\r\n                addErrorBanner('Оновлено', 3);\r\n            })\r\n            .catch(() => {\r\n                console.log('error');\r\n            })\r\n    }\r\n\r\n    updateUserData = () => {\r\n        const { storytellerService, userData } = this.props;\r\n        const {username, email, name, surname, about} = this.state;\r\n\r\n        const {username: myUsername, email: myEmail, name: myName, surname: MySurname, about: AboutMe} = userData;\r\n\r\n        let selection = {};\r\n\r\n        if (username !== myUsername) {\r\n            selection.username = username;\r\n        }\r\n        if (email !== myEmail) {\r\n            selection.email = email;\r\n        }\r\n        if (name !== myName) {\r\n            selection.name = name;\r\n        }\r\n        if (surname !== MySurname) {\r\n            selection.surname = surname;\r\n        }\r\n        if (about !== AboutMe) {\r\n            selection.about = about;\r\n        }\r\n\r\n        storytellerService.users.update(selection)\r\n            .then(() => {\r\n                this.loadSmallData(selection, username !== myUsername ? username : undefined);\r\n            })\r\n            .catch(() => {\r\n                this.serverError();\r\n            })\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.updateUserData();\r\n    }\r\n\r\n    serverError = () => {\r\n        const { addErrorBanner } = this.props;\r\n\r\n        addErrorBanner('На сервері виникли проблеми, будь-ласка, зачекайте', 3);\r\n    }\r\n\r\n    usernameU = ({ target: { value } }) => {\r\n        this.setState({\r\n            username: this.correctUsername(value)\r\n        })\r\n    }\r\n\r\n    emailU = ({ target: { value } }) => this.setState({\r\n        email: this.correctEmail(value)\r\n    })\r\n\r\n    correctUsername = (value) => {\r\n        const { addErrorBanner, storytellerService, userData: {username} } = this.props;\r\n\r\n        storytellerService.checkUsername(value)\r\n            .then(code => {\r\n                const clearTimer = () => {\r\n                    const { usernameTimer } = this.state;\r\n                    clearTimeout(usernameTimer);\r\n                }\r\n\r\n                const addTimer = (message, delayTime) => {\r\n                    clearTimer();\r\n\r\n                    this.setState({\r\n                        usernameTimer: setTimeout(() => {\r\n                            addErrorBanner(message, delayTime, 'white');\r\n                        }, 500),\r\n                        trueUser: false\r\n                    })\r\n                }\r\n\r\n                if (value.length !== 0) {\r\n                    switch (code) {\r\n                        case 'busy':\r\n                            if (value === username) {\r\n                                this.setState({\r\n                                    trueUser: true\r\n                                })\r\n                            }\r\n                            else {\r\n                                addTimer('Даний нікнейм вже кимось використовується', 3);\r\n                            }\r\n                            break;\r\n\r\n                        case 'incorrect':\r\n                            addTimer('Довжина нікнейма від 4 до 16 симолів. Можна використовувати латинські літери, цифри та нижні підкреслення \"_\"', 3);\r\n                            break;\r\n\r\n                        default:\r\n                            clearTimer();\r\n                            this.setState({\r\n                                trueUser: true\r\n                            })\r\n                    }\r\n                }\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, зачекайте', 3, 'white');\r\n            })\r\n\r\n        return value;\r\n    }\r\n\r\n    correctEmail = (value) => {\r\n        const { addErrorBanner, storytellerService } = this.props;\r\n\r\n        storytellerService.checkEmail(value)\r\n            .then(code => {\r\n                const clearTimer = () => {\r\n                    const { usernameTimer } = this.state;\r\n                    clearTimeout(usernameTimer);\r\n                }\r\n\r\n                const addTimer = (message, delayTime) => {\r\n                    clearTimer();\r\n\r\n                    this.setState({\r\n                        usernameTimer: setTimeout(() => {\r\n                            addErrorBanner(message, delayTime, 'white');\r\n                        }, 2500),\r\n                        trueEmail: false\r\n                    })\r\n                }\r\n\r\n                if (value.length !== 0) {\r\n                    switch (code) {\r\n                        case 'busy':\r\n                            addTimer('Даний емейл вже використовується', 3);\r\n                            break;\r\n\r\n                        case 'incorrect':\r\n                            addTimer('Введіть корректний емейл', 3);\r\n                            break;\r\n\r\n                        default:\r\n                            clearTimer();\r\n                            this.setState({\r\n                                trueEmail: true\r\n                            })\r\n                    }\r\n                }\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('На сервері виникли проблеми, будь-ласка, зачекайте', 3, 'white');\r\n            })\r\n\r\n        return value;\r\n    }\r\n\r\n    nameU = ({ target: { value } }) => {\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n\r\n    surnameU = ({ target: { value } }) => {\r\n        this.setState({\r\n            surname: value\r\n        })\r\n    }\r\n\r\n    aboutU = ({ target: { value } }) => {\r\n        this.setState({\r\n            about: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { userData: { urlToImage } } = this.props;\r\n        const { username, name, surname, email, about, updateButtonEnable } = this.state;\r\n\r\n        return (\r\n            <div className='profile-edit setting-inner'>\r\n                <div className=\"user-preview\">\r\n                    <div className=\"user-avatar-container\">\r\n                        <UserAvatar className='user-avatar' urlToImage={urlToImage} onClick={this.clickOnImageForm} />\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <div className='username'>\r\n                            <span>\r\n                                @{username}\r\n                            </span>\r\n                        </div>\r\n                        <button className='change-my-avatar' onClick={this.clickOnImageForm}>\r\n                            Змінити основну світлину\r\n                        </button>\r\n                    </div>\r\n                    <input type=\"file\" ref={this.imageForm} onChange={this.uploadImage} />\r\n                </div>\r\n                <div className=\"user-data\">\r\n                    <div className=\"username small-data\">\r\n                        <aside>\r\n                            Нікнейм\r\n                        </aside>\r\n                        <input type=\"text\" placeholder={'...'} value={username} onChange={this.usernameU} maxLength='16'/>\r\n                    </div>\r\n                    <div className=\"name small-data\">\r\n                        <aside>\r\n                            Ім'я\r\n                        </aside>\r\n                        <input type=\"text\" placeholder={`...`} value={name} onChange={this.nameU} />\r\n                    </div>\r\n                    <div className=\"surname small-data\">\r\n                        <aside>\r\n                            Прізвище\r\n                        </aside>\r\n                        <input type=\"text\" placeholder={'...'} value={surname} onChange={this.surnameU} />\r\n                    </div>\r\n                    <div className=\"email small-data\">\r\n                        <aside>\r\n                            Емейл\r\n                        </aside>\r\n                        <input type=\"text\" placeholder={'...'} value={email} onChange={this.emailU} />\r\n                    </div>\r\n                    <div className=\"about small-data\">\r\n                        <aside>\r\n                            Про себе\r\n                        </aside>\r\n                        <Input placeholder='...' disabledAutoFocus tagName='span' value={about} onChange={this.aboutU} />\r\n                    </div>\r\n                    <div className=\"load-my-data small-data\" >\r\n                        <div className={`blue-btn small ${updateButtonEnable ? '' : 'disabled'}`}>\r\n                            <button onClick={this.handleClick}>\r\n                                <span>\r\n                                    Надіслати\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ userData }) => ({ userData }), actions)(\r\n    withStorytellerService()(ProfileEdit)\r\n);","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst ChangeSettingBtn = ({ children, linkTo, location, link }) => {\r\n\r\n    const [className, setClassName] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (location.pathname.includes(link)) {\r\n            setClassName('active');\r\n        }\r\n        else {\r\n            setClassName('');\r\n        }\r\n    }, [location, link]);\r\n\r\n    return (\r\n        <button onClick={() => linkTo(link)} className={className}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ChangeSettingBtn;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../actions'; \r\n\r\nimport {withStorytellerService} from '../hoc';\r\n\r\nconst ChangePassword = ({addErrorBanner, storytellerService}) => {\r\n    const [oldPassword, changeOldPassword] = useState('');\r\n    const [newPassword1, changeNewPassword1] = useState('');\r\n    const [newPassword2, changeNewPassword2] = useState('');\r\n\r\n    const [updateButtonEnable, setUpdateButtonEnable] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        if (newPassword1 !== newPassword2) {\r\n            addErrorBanner('Паролі не збігаються', 3, 'white');\r\n        }\r\n        else {\r\n            if (newPassword1.length < 4) {\r\n                addErrorBanner('Створіть пароль мінімум з 5 символів.', 3.5, 'white');\r\n            }\r\n            else {\r\n                storytellerService.users.updatePassword(oldPassword, newPassword1)\r\n                .then(() => {\r\n                    addErrorBanner('Оновлено', 3, 'white');\r\n                })\r\n                .catch(() => {\r\n                    addErrorBanner('Ваш старий пароль указано неправильно. Введіть його ще раз.', 3.5, 'white');\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (oldPassword && newPassword2 && newPassword1) {\r\n            setUpdateButtonEnable(true);\r\n        }\r\n        else {\r\n            setUpdateButtonEnable(false);\r\n        }\r\n    }, [oldPassword, newPassword1, newPassword2])\r\n\r\n    return (\r\n        <div className=\"change-password-container__settings setting-inner\">\r\n            <div className=\"old-password small-data\">\r\n                <aside>\r\n                    Старий пароль\r\n                </aside>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder={'...'}\r\n                    value={oldPassword}\r\n                    onChange={({ target: { value } }) => changeOldPassword(value)} />\r\n            </div>\r\n            <div className=\"new-password1 small-data\">\r\n                <aside>\r\n                    Новий пароль\r\n                        </aside>\r\n                <input type=\"password\" placeholder={'...'} value={newPassword1} onChange={({ target: { value } }) => changeNewPassword1(value)} />\r\n            </div>\r\n            <div className=\"new2-password small-data\">\r\n                <aside>\r\n                    Підтвердьте новий пароль\r\n                </aside>\r\n                <input type=\"password\" placeholder={'...'} value={newPassword2} onChange={({ target: { value } }) => changeNewPassword2(value)} />\r\n            </div>\r\n            <div className=\"load-my-data small-data\" >\r\n                <div className={`blue-btn small ${updateButtonEnable ? '' : 'disabled'}`}>\r\n                    <button onClick={handleClick}>\r\n                        <span>\r\n                            Надіслати\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(() => ({}), actions)(\r\n    withStorytellerService()(ChangePassword)\r\n)","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { SimpleLoader } from '../loader';\r\n\r\nconst StoryBlock = ({ id, title, publishedAt: date, removeMe, storyClick }) => {\r\n\r\n    return (\r\n        <div className='my-story'>\r\n            <div className=\"left\">\r\n                <div className=\"title\" onClick={() => storyClick(id)}>\r\n                    <h3>\r\n                        {title}\r\n                    </h3>\r\n                </div>\r\n                <div className=\"publishedAt\">\r\n                    {\r\n                        date ? (\r\n                            <React.Fragment>\r\n                                <span>{date.day} </span>\r\n                                <span>{date.month} </span>\r\n                                <span>{date.year}</span>\r\n                            </React.Fragment>\r\n                        ) : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                <button onClick={() => removeMe(id)} className='basket menu-item'></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NoResultH1 = () => {\r\n    return (\r\n        <h3 className='find-nothing'>\r\n            Пусто\r\n        </h3>\r\n    )\r\n}\r\n\r\nclass MyStories extends React.Component {\r\n    state = {\r\n        myStories: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.createMyStoriesList();\r\n    }\r\n\r\n    createMyStoriesList = () => {\r\n        const { userData, storytellerService } = this.props;\r\n\r\n        const { userId } = userData;\r\n\r\n        this.setState({\r\n            myStories: [],\r\n            loading: true\r\n        })\r\n\r\n        if (userId) {\r\n            storytellerService.stories.getAll({\r\n                find: {\r\n                    userId\r\n                },\r\n                selection: {\r\n                    previewTitle: true,\r\n                    _id: true,\r\n                    publishedAt: true\r\n                }\r\n            })\r\n                .then(storiesList => {\r\n                    this.buildStoriesList(storiesList)\r\n\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                })\r\n                .catch(() => {\r\n                    console.error(404)\r\n\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    buildStoriesList = (storiesList) => {\r\n        const myStories = storiesList.map(story => {\r\n            const { _id: id, publishedAt, previewTitle: title } = story;\r\n\r\n            return (\r\n                <StoryBlock key={id} title={title} id={id} removeMe={this.removeStory} publishedAt={publishedAt} storyClick={this.storyClick}/>\r\n            )\r\n        })\r\n\r\n        this.setState({\r\n            myStories\r\n        })\r\n    }\r\n\r\n    storyClick = (id) => {\r\n        const {history} = this.props;\r\n\r\n        history.push(`/stories/${id}`);\r\n    }\r\n\r\n    removeStory = (id) => {\r\n        const {storytellerService, addErrorBanner} = this.props;\r\n\r\n        storytellerService.stories.removeStory(id)\r\n            .then(() => {\r\n                addErrorBanner('Історія була видалена');\r\n                this.createMyStoriesList();\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('Спробуйте будь-ласка пізніше', 3);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { myStories, loading } = this.state;\r\n\r\n        let showNothing = false;\r\n\r\n        if (!loading && myStories.length === 0) {\r\n            showNothing = true;\r\n        }\r\n\r\n        return (\r\n            <div className='my-stories setting-inner'>\r\n                {\r\n                    loading ? <SimpleLoader /> :\r\n                        showNothing ?\r\n                            <NoResultH1 /> :\r\n                            myStories\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ userData }) => ({ userData }), actions)(\r\n    withStorytellerService()(\r\n        withRouter(MyStories)\r\n    )\r\n);","import React from 'react';\r\nimport UserAvatar from '../user-avatar';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport actions from '../../actions';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { SimpleLoader } from '../loader';\r\n\r\nconst FollowerBlock = ({ id, follow, getUserById }) => {\r\n    const [userData, setUserData] = useState({\r\n        username: '',\r\n        urlToImage: null\r\n    })\r\n\r\n    const { username, urlToImage } = userData;\r\n\r\n    useEffect(() => {\r\n        getUserById(id, {\r\n            username: true,\r\n            urlToImage: true,\r\n            _id: false\r\n        })\r\n            .then(({ username, urlToImage }) => {\r\n                setUserData({\r\n                    username,\r\n                    urlToImage\r\n                })\r\n            })\r\n            .catch(() => {\r\n                console.error(404);\r\n            })\r\n    }, [getUserById, id])\r\n\r\n    return (\r\n        <div className='following'>\r\n            <div className=\"left\">\r\n                <UserAvatar urlToImage={urlToImage} className='user-avatar' />\r\n            </div>\r\n            <div className=\"right\">\r\n                <div className=\"top\">\r\n                    <span>\r\n                        @{username}\r\n                    </span>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <button className='follow' onClick={() => follow(id)}>\r\n                        Відписатися\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NoResultH1 = () => {\r\n    return (\r\n        <h3 className='find-nothing'>\r\n            Пусто\r\n        </h3>\r\n    )\r\n}\r\n\r\nclass UserFollowers extends React.Component {\r\n    state = {\r\n        followingsList: [],\r\n        loading: true\r\n    }\r\n\r\n    follow = (id) => {\r\n        const { storytellerService, addErrorBanner } = this.props;\r\n\r\n        storytellerService.users.unfollow(id)\r\n            .then(() => {\r\n                addErrorBanner('Успішно', 3, 'white');\r\n                this.getMyFollowings();\r\n            })\r\n            .catch(() => {\r\n                addErrorBanner('Спробуйте ще раз через декілька секунд', 3, 'white');\r\n            })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getMyFollowings();\r\n    }\r\n\r\n    getMyFollowings = () => {\r\n        const { userData, storytellerService } = this.props;\r\n        const { username } = userData;\r\n\r\n        this.setState({\r\n            loading: true,\r\n            followingsList: []\r\n        })\r\n\r\n        if (username) {\r\n            storytellerService.users.getSmallData(username, {\r\n                followings: true\r\n            })\r\n                .then(({ followings }) => {\r\n                    this.createFollowingsList(followings);\r\n\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                })\r\n                .catch(() => {\r\n                    console.error(404);\r\n\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    createFollowingsList = (followings) => {\r\n        const { storytellerService } = this.props;\r\n\r\n        const followingsList = followings.map(user => {\r\n            const { userId: id } = user;\r\n\r\n            return (\r\n                <FollowerBlock key={id} follow={this.follow} id={id} getUserById={storytellerService.users.getById} />\r\n            )\r\n        })\r\n\r\n        this.setState({\r\n            followingsList\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { followingsList, loading } = this.state;\r\n\r\n        let showNothing = false;\r\n\r\n        if (!loading && followingsList.length === 0) {\r\n            showNothing = true;\r\n        }\r\n\r\n        return (\r\n            <div className='my-followings setting-inner'>\r\n                {\r\n                    loading ? <SimpleLoader /> :\r\n                        showNothing ?\r\n                            <NoResultH1 /> :\r\n                            followingsList\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({ userData }) => ({ userData }), actions)(\r\n    withStorytellerService()(\r\n        withRouter(UserFollowers)\r\n    )\r\n)","import React from 'react';\r\n\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\n\r\nimport './style.scss';\r\n\r\nimport ProfileEdit from './profile-edit';\r\n\r\nimport ChangeSettingBtn from './change-setting-btn';\r\nimport ChangePassword from './change-password';\r\n\r\nimport MyStories from './stories';\r\n\r\nimport UserFollowers from './followings';\r\n\r\nimport {withStorytellerService} from '../hoc';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\n\r\n\r\nclass MySettings extends React.Component {\r\n\r\n    linkTo = (to) => {\r\n        const { history } = this.props;\r\n        history.push(`/settings${to}`);\r\n    }\r\n\r\n    logout = () => {\r\n        const {storytellerService, login, userData, history} = this.props;\r\n\r\n        storytellerService.logout();\r\n        login(true);\r\n\r\n        history.push(`/authors/${userData.username}`);\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n\r\n        return (\r\n            <div className='my-settings'>\r\n                <div className=\"settings-panel\">\r\n                    <div className=\"settings-panel-inner\">\r\n                        <ChangeSettingBtn linkTo={this.linkTo} link='/profile' location={location}>\r\n                            Редагувати профіль\r\n                        </ChangeSettingBtn>\r\n                        <ChangeSettingBtn linkTo={this.linkTo} link='/password' location={location}>\r\n                            Змінити пароль\r\n                        </ChangeSettingBtn>\r\n                        <ChangeSettingBtn linkTo={this.linkTo} link='/stories' location={location}>\r\n                            Історії\r\n                        </ChangeSettingBtn>\r\n                        <ChangeSettingBtn linkTo={this.linkTo} link='/followings' location={location}>\r\n                            Стежу за...\r\n                        </ChangeSettingBtn>\r\n                        <button className='logout' onClick={this.logout}>\r\n                            Вихід\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className='setting'>\r\n                    <Switch>\r\n                        <Route path='/settings/profile'>\r\n                            <ProfileEdit />\r\n                        </Route>\r\n                        <Route path='/settings/password'>\r\n                            <ChangePassword />\r\n                        </Route>\r\n                        <Route path='/settings/stories'>\r\n                            <MyStories />\r\n                        </Route>\r\n                        <Route path='/settings/followings'>\r\n                            <UserFollowers />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.userData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(\r\n    withStorytellerService()(\r\n        withRouter(MySettings)\r\n    )\r\n)","import React, { useEffect, useState, useRef, useCallback } from 'react';\r\n\r\nconst ErrorBanner = ({ children, delayTime, removeMe, id, styleClass }) => {\r\n    const [showMe, setShowMe] = useState(false);\r\n\r\n    const dTimerId = useRef(null);\r\n\r\n    const removeBanner = useCallback(() => {\r\n        clearTimeout(dTimerId.current);\r\n        setShowMe(false);\r\n\r\n        setTimeout(() => {\r\n            removeMe(id)\r\n        }, 400)\r\n    }, [id, removeMe])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShowMe(true);\r\n        }, 400)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        clearTimeout(dTimerId.current);\r\n        dTimerId.current = setTimeout(removeBanner, delayTime * 1000);\r\n    }, [delayTime, removeBanner])\r\n\r\n    return (\r\n        <div className={`error-banner ${showMe ? '' : 'hide'} ${styleClass}`} onClick={removeBanner}>\r\n            <span>\r\n                {children}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorBanner;","import React from 'react';\r\n\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport './style.scss';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../actions';\r\n\r\nimport ErrorBanner from './banner';\r\nimport { useCallback } from 'react';\r\n\r\nconst ErrorBannerConteiner = ({errorBanners, removeErrorBanner}) => {\r\n\r\n    const [errorBannersList, setErrorBannerList] = useState([]);\r\n    \r\n    const createErrorBannerList = useCallback(() => {\r\n        const errorBannersList = errorBanners.map(({message, delayTime: defaultDelayTime, id, style}, bannerId) => {\r\n\r\n            let delayTime = defaultDelayTime;\r\n\r\n            if (bannerId > 0) {\r\n                delayTime = 0;\r\n            }\r\n\r\n            return (\r\n                <ErrorBanner\r\n                    key={id}\r\n                    delayTime={delayTime}\r\n                    removeMe={removeErrorBanner}\r\n                    id={id}\r\n                    styleClass={style}\r\n                >\r\n                    {message}\r\n                </ErrorBanner>\r\n            )\r\n        })\r\n\r\n        setErrorBannerList(errorBannersList);\r\n    }, [errorBanners, removeErrorBanner])\r\n\r\n    useEffect(() => {\r\n        createErrorBannerList();\r\n    }, [createErrorBannerList]);\r\n\r\n    return (\r\n        <div className='error-banner-container'>\r\n            {errorBannersList}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {errorBanners} = state;\r\n\r\n    return {\r\n        errorBanners\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, actions)(\r\n    ErrorBannerConteiner\r\n)","import React from 'react';\r\n\r\nimport { withStorytellerService } from '../hoc';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\n\r\nimport Header from '../header';\r\nimport Footer from '../footer';\r\n\r\nimport About from '../about';\r\n\r\nimport Registration from '../registration';\r\nimport Login from '../login';\r\n\r\nimport StoryEditor from '../story-editor';\r\nimport Stories from '../stories';\r\n\r\nimport StoryPage from '../story-page';\r\n\r\nimport UserPage from '../user-page';\r\n\r\nimport Authors from '../authors';\r\n\r\nimport MySettings from '../my-settings';\r\n\r\nimport ErrorBannerContainer from '../error-baner';\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { login, loadGenres, storytellerService, updateUserData, addErrorBanner } = this.props; //, history\r\n\r\n        storytellerService.auth()\r\n            .then((userData) => {\r\n                const { status, username, name, surname, urlToImage, _id: userId, about, email } = userData;\r\n\r\n                switch (status) {\r\n                    case 401:\r\n                        login(true);\r\n                        // history.push('/about');\r\n                        break;\r\n\r\n                    case 200:\r\n                        login(false);\r\n                        updateUserData({\r\n                            userId,\r\n                            username,\r\n                            name,\r\n                            urlToImage,\r\n                            surname,\r\n                            about,\r\n                            email\r\n                        })\r\n                        break;\r\n\r\n                    default:\r\n                        addErrorBanner('На сервері виникли проблеми, будь-ласка, зачекайте', 3);\r\n                }\r\n            })\r\n\r\n        storytellerService.genres.getAll().then(loadGenres);\r\n    }\r\n\r\n    render() {\r\n        const { needLogin } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <main>\r\n                    <Switch>\r\n                        <Route path=\"/about\">\r\n                            <About />\r\n                        </Route>\r\n                        <Route path=\"/registration\">\r\n                            {\r\n                                needLogin ? <Registration /> : <Redirect to='/' />\r\n                            }\r\n                        </Route>\r\n                        <Route path=\"/login\">\r\n                            {\r\n                                needLogin ? <Login /> : <Redirect to='/' />\r\n                            }\r\n                        </Route>\r\n                        <Route path=\"/write-story\">\r\n                            {\r\n                                needLogin ? <Redirect to='/login' /> : <StoryEditor />\r\n                            }\r\n                        </Route>\r\n                        <Route path='/stories/' exact>\r\n                            <Stories />\r\n                        </Route>\r\n                        <Route path='/authors/' exact>\r\n                            <Authors />\r\n                        </Route>\r\n                        <Route path='/stories/:id'>\r\n                            <StoryPage />\r\n                        </Route>\r\n                        <Route path='/authors/:id'>\r\n                            <UserPage />\r\n                        </Route>\r\n                        <Route path='/settings'>\r\n                            {\r\n                                needLogin ? <Redirect to='/login' /> : <MySettings />\r\n                            }\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            {\r\n                                needLogin ? <Redirect to='/about' /> : <Stories />\r\n                            }\r\n                        </Route>\r\n                    </Switch>\r\n                </main>\r\n                <Footer />\r\n                <ErrorBannerContainer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({ needLogin: state.needLogin }), actions)(\r\n    withStorytellerService()(\r\n        withRouter(App)\r\n    )\r\n);","import React from 'react';\r\n\r\nconst ErrorIndicator = () => (<div>Error!!!</div>);\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState(() => ({ hasError: true }));\r\n    }\r\n\r\n    render() {\r\n        const {hasError} = this.state;\r\n        if (hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n        return this.props.children;\r\n    }\r\n}","const initialState = {\r\n    needLogin: true,\r\n    firstStoryGenresList: [],\r\n    genresList: [],\r\n    userData: {\r\n        username: undefined,\r\n        urlToImage: null,\r\n        name: undefined,\r\n        surname: undefined,\r\n        userId: undefined,\r\n        about: undefined,\r\n        email: undefined\r\n    },\r\n    nextRoute: null,\r\n\r\n    errorBanners: []\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n\r\n    switch (type) {\r\n\r\n        case 'login':\r\n            return {\r\n                ...state,\r\n                needLogin: payload\r\n            }\r\n\r\n        case 'setFirstStoryGenresList':\r\n            const genres = state.firstStoryGenresList;\r\n            const id = genres.findIndex(genre => genre === payload);\r\n\r\n            if (id !== -1) {\r\n                genres.splice(id, 1);\r\n            }\r\n            else {\r\n                genres.push(payload);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                firstStoryGenresList: genres\r\n            }\r\n\r\n        case 'loadGenres':\r\n            return {\r\n                ...state,\r\n                genresList: payload\r\n            }\r\n\r\n        case 'updateUserData':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    ...payload\r\n                }\r\n            };\r\n\r\n        case 'removeFirstStoryGenresList':\r\n            return {\r\n                ...state,\r\n                firstStoryGenresList: []\r\n            }\r\n\r\n        case 'setNextRoute':\r\n            return {\r\n                ...state,\r\n                nextRoute: payload\r\n            }\r\n\r\n        case 'addErrorBanner':\r\n            const {errorBanners} = state;\r\n\r\n            return {\r\n                ...state,\r\n                errorBanners: [\r\n                    {\r\n                        ...payload,\r\n                        id: Date.now()\r\n                    },\r\n                    ...errorBanners.slice(0, errorBanners.length)\r\n                ]\r\n            }\r\n\r\n        case 'removeErrorBanner':\r\n            const {errorBanners: a} = state;\r\n\r\n            const bannerId = a.findIndex(banner => banner.id === payload);\r\n\r\n            if (bannerId !== -1) {\r\n                return {\r\n                    ...state,\r\n                    errorBanners: [\r\n                        ...a.slice(0, bannerId),\r\n                        ...a.slice(bannerId+1, a.length)\r\n                    ]\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {createStore} from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store  = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './default-style/index.scss';\n\nimport './fonts/MinionPro.css';\nimport './fonts/PFBagueSansPro.css';\n\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport StorytellerService from './services/storyteller';\nimport { StorytellerServiceProvider } from './components/context/storyteller-service';\n\nimport \"current-device\";\n\nimport store from './store';\n\nconst storytellerService = new StorytellerService();\n\n\nReactDOM.render(\n    <ErrorBoundry>\n        <ReduxProvider store={store}>\n            <StorytellerServiceProvider value={storytellerService}>\n                <Router>\n                    <App />\n                </Router>\n            </StorytellerServiceProvider>\n        </ReduxProvider>\n    </ErrorBoundry>\n    , document.getElementById('root'));","export default class StoryService {\r\n    // BASE_URL = \"http://192.168.1.6:9000/api\";\r\n    // BASE_URL = \"http://127.0.0.1:9000/api\";\r\n    BASE_URL = '/api';\r\n\r\n    _setToken = (token) => localStorage.setItem('token', token)\r\n\r\n    _getToken = () => localStorage.getItem('token')\r\n\r\n    _sendReq = (url, body = {}, method = 'post', contentType = 'application/json') => fetch(this.BASE_URL + url, {\r\n        method,\r\n        headers: {\r\n            \"Content-Type\": contentType,\r\n            \"Authorization\": this._getToken()\r\n        },\r\n        body: JSON.stringify(body)\r\n    })\r\n\r\n    _post = (url, body) => fetch(this.BASE_URL + url, {\r\n        method: 'post',\r\n        headers: {\r\n            \"Authorization\": this._getToken()\r\n        },\r\n        body\r\n    })\r\n\r\n    _get = (url) => fetch(this.BASE_URL + url);\r\n\r\n    _checkError = (res) => {\r\n        if (!res.ok) {\r\n            throw res.status;\r\n        }\r\n    }\r\n\r\n    _parseRes = async (res, type = \"json\") => {\r\n        this._checkError(res);\r\n\r\n        switch (type) {\r\n            case 'json':\r\n                return await res.json()\r\n            case 'text':\r\n                return await res.text()\r\n            default:\r\n                throw new Error(\"Invalid action type\");\r\n        }\r\n    }\r\n\r\n    auth = async () => {\r\n        const res = await this._sendReq('/auth');\r\n\r\n        if (!res.ok) {\r\n            return {\r\n                status: res.status\r\n            }\r\n        }\r\n        else {\r\n            return {\r\n                ...(await this._parseRes(res)),\r\n                status: res.status\r\n            };\r\n        }\r\n    }\r\n\r\n    login = async (username, password) => {\r\n        const res = await this._sendReq('/login', {\r\n            username,\r\n            password\r\n        });\r\n        const json = await this._parseRes(res);\r\n        this._setToken(\r\n            json.token\r\n        );\r\n        delete json.token;\r\n\r\n        return json;\r\n    }\r\n\r\n    logout = async () => {\r\n        this._setToken('S T O R Y T E L L E R');\r\n    }\r\n\r\n    reg = async (username, email, password) => {\r\n        const res = await this._sendReq('/reg', {\r\n            username,\r\n            email,\r\n            password\r\n        })\r\n        const json = await this._parseRes(res);\r\n        this._setToken(\r\n            json.token\r\n        );\r\n        delete json.token;\r\n\r\n        return json;\r\n    }\r\n\r\n    checkUsername = async (username) => {\r\n        if (username.match(/^[A-Za-z0-9_]{4,16}$/)) {\r\n            const res = await this._sendReq(`/users/${username}`, {\r\n                _id: true\r\n            });\r\n\r\n            if (res.ok) {\r\n                return 'busy'\r\n            }\r\n            else {\r\n                return 'empty'\r\n            }\r\n        }\r\n        else {\r\n            return 'incorrect';\r\n        }\r\n    }\r\n\r\n    checkEmail = async (email) => {\r\n        if (email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/)) {\r\n            const res = await this._sendReq(`/users/check-email/${email}`, {\r\n                _id: true\r\n            })\r\n\r\n            if (res.ok) {\r\n                return 'busy'\r\n            }\r\n            else {\r\n                return 'empty'\r\n            }\r\n        }\r\n        else {\r\n            return 'incorrect';\r\n        }\r\n    }\r\n\r\n    genres = {\r\n        getAll: async () => {\r\n            const res = await this._get('/genres/');\r\n\r\n            return await this._parseRes(res);\r\n        }\r\n    }\r\n\r\n    image = {\r\n        get: (name) => {\r\n            return `${this.BASE_URL}/images/${name}`;\r\n        },\r\n        post: async (fileData) => {\r\n            let formData = new FormData();\r\n            formData.append('filedata', fileData);\r\n\r\n            const res = await this._post('/images/', formData);\r\n            return await this._parseRes(res, 'text')\r\n        }\r\n    }\r\n\r\n    // users = {\r\n    //     get: async (id) => {\r\n    //         const res = await this._get(`/users/${id}`);\r\n    //         return await this._parseRes(res);\r\n    //     }\r\n    // }\r\n\r\n    getMonth = (monthId) => {\r\n        switch (monthId) {\r\n            case 0:\r\n                return 'Січня'\r\n            case 1:\r\n                return 'Лютого'\r\n            case 2:\r\n                return 'Березня'\r\n            case 3:\r\n                return 'Квітня'\r\n            case 4:\r\n                return 'Травня'\r\n            case 5:\r\n                return 'Червня'\r\n            case 6:\r\n                return 'Липня'\r\n            case 7:\r\n                return 'Серпня'\r\n            case 8:\r\n                return 'Вересня'\r\n            case 9:\r\n                return 'Жовтня'\r\n            case 10:\r\n                return 'Листопада'\r\n            case 11:\r\n                return 'Грудня'\r\n\r\n            default: throw new Error('Invalid date')\r\n        }\r\n    }\r\n\r\n    convertData = (d) => {\r\n        const date = new Date(d);\r\n        return {\r\n            day: date.getDate(),\r\n            month: this.getMonth(date.getMonth()),\r\n            year: date.getFullYear()\r\n        }\r\n    }\r\n\r\n    stories = {\r\n        get: async (id) => {\r\n            const res = await this._get('/stories/' + id);\r\n            const story = await this._parseRes(res);\r\n\r\n            const { publishedAt } = story;\r\n\r\n            return {\r\n                ...story,\r\n                publishedAt: this.convertData(publishedAt)\r\n            }\r\n        },\r\n        getSmallData: async (id, selection, find = {}) => {\r\n            const res = await this._sendReq(`/stories/find-one`, {\r\n                id,\r\n                selection,\r\n                find\r\n            })\r\n\r\n            return this._parseRes(res);\r\n        },\r\n        getAll: async (body) => {\r\n            const res = await this._sendReq('/stories/find', body);\r\n            const stories = await this._parseRes(res);\r\n\r\n            return stories.map(story => {\r\n                const { publishedAt } = story;\r\n\r\n                return {\r\n                    ...story,\r\n                    publishedAt: this.convertData(publishedAt)\r\n                }\r\n            })\r\n        },\r\n        post: async (title, body, genres, previewImage, previewBody, previewTitle) => {\r\n            const res = await this._sendReq('/stories/', {\r\n                title,\r\n                body,\r\n                genres,\r\n                previewImage,\r\n                previewBody,\r\n                previewTitle\r\n            })\r\n\r\n            return await this._parseRes(res);\r\n        },\r\n        like: async (id) => {\r\n            const res = await this._sendReq(`/stories/like/${id}`)\r\n\r\n            return this._checkError(res);\r\n        },\r\n        unlike: async (id) => {\r\n            const res = await this._sendReq(`/stories/like/${id}`, {}, 'DELETE');\r\n\r\n            return this._checkError(res);\r\n        },\r\n\r\n        removeStory: async (id) => {\r\n            const res = await this._sendReq(`/stories/${id}`, {}, 'DELETE');\r\n\r\n            return this._checkError(res);\r\n        },\r\n\r\n        comment: async (storyId, body) => {\r\n            const res = await this._sendReq('/stories/comment/', {\r\n                storyId,\r\n                body\r\n            })\r\n\r\n            return this._checkError(res);\r\n        },\r\n\r\n        commentLike: async (storyId, commentId) => {\r\n            const res = await this._sendReq('/stories/comment/like', {\r\n                storyId,\r\n                commentId\r\n            });\r\n\r\n            return await this._checkError(res);\r\n        },\r\n\r\n        commentUnlike: async (storyId, commentId) => {\r\n            const res = await this._sendReq('/stories/comment/like', {\r\n                storyId,\r\n                commentId\r\n            }, 'delete');\r\n\r\n            return await this._checkError(res);\r\n        },\r\n\r\n        removeComment: async (storyId, commentId) => {\r\n            const res = await this._sendReq('/stories/comment/', {\r\n                storyId,\r\n                commentId\r\n            }, 'delete');\r\n\r\n            return await this._checkError(res);\r\n        }\r\n    }\r\n\r\n    drafts = {\r\n        save: async (title, body, previewTitle, previewBody, previewImage) => {\r\n            const res = await this._sendReq('/drafts/', {\r\n                title,\r\n                body,\r\n                previewTitle,\r\n                previewBody,\r\n                previewImage\r\n            })\r\n\r\n            return await this._checkError(res);\r\n        }\r\n    }\r\n\r\n    users = {\r\n        get: async (username, selection) => {\r\n            const res = await this._sendReq('/users/' + username, selection);\r\n            return this._parseRes(res);\r\n        },\r\n        getById: async (id, selection) => {\r\n            const res = await this._sendReq('/users/getById/' + id, selection);\r\n            return this._parseRes(res);\r\n        },\r\n        getSmallData: async (id, selection) => {\r\n            const res = await this._sendReq(`/users/get`, {\r\n                id,\r\n                selection\r\n            })\r\n\r\n            return this._parseRes(res);\r\n        },\r\n        follow: async (id) => {\r\n            const res = await this._sendReq('/users/follow/' + id);\r\n\r\n            return this._checkError(res);\r\n        },\r\n        unfollow: async (id) => {\r\n            const res = await this._sendReq('/users/follow/' + id, {}, 'delete');\r\n\r\n            return this._checkError(res);\r\n        },\r\n        getAll: async (skip, limit, selection, find) => {\r\n            const res = await this._sendReq('/users/find', {\r\n                selection,\r\n                skip,\r\n                limit,\r\n                find\r\n            })\r\n\r\n            return await this._parseRes(res);\r\n        },\r\n\r\n        update: async (data) => {\r\n            const res = await this._sendReq('/users', data, 'PATCH');\r\n\r\n            return this._checkError(res);\r\n        },\r\n        updatePassword: async (oldP, newP) => {\r\n            const res = await this._sendReq('/users/updatePassword', {\r\n                oldPassword: oldP,\r\n                newPassword: newP\r\n            }, 'PATCH');\r\n\r\n            return this._checkError(res);\r\n        }\r\n    }\r\n}"],"sourceRoot":""}